{"ast":null,"code":"import _slicedToArray from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/metrics-api/src/app/views/metrics/PaginationMetric.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { IconButton, Table, TableHead, TableBody, TableRow, TableCell, Icon, TablePagination } from '@mui/material';\nimport React from 'react';\nimport { Box, styled } from '@mui/system';\nimport { SimpleCard } from 'app/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar StyledTable = styled(Table)(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    whiteSpace: 'pre',\n    '& thead': {\n      '& tr': {\n        '& th': {\n          paddingLeft: 0,\n          paddingRight: 0\n        }\n      }\n    },\n    '& tbody': {\n      '& tr': {\n        '& td': {\n          paddingLeft: 0,\n          textTransform: 'capitalize'\n        }\n      }\n    }\n  };\n});\nvar subscribarList = [{\n  name: 'john doe'\n}, {\n  name: 'kessy bryan'\n}, {\n  name: 'kessy bryan'\n}, {\n  name: 'james cassegne'\n}, {\n  name: 'lucy brown'\n}, {\n  name: 'lucy brown'\n}, {\n  name: 'lucy brown'\n}, {\n  name: 'lucy brown'\n}, {\n  name: 'lucy brown'\n}];\n\nvar PaginationMetric = function PaginationMetric() {\n  _s();\n\n  var _React$useState = React.useState(5),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      rowsPerPage = _React$useState2[0],\n      setRowsPerPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      page = _React$useState4[0],\n      setPage = _React$useState4[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SimpleCard, {\n    title: \"Pagination Table\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      width: \"100%\",\n      overflow: \"auto\",\n      children: [/*#__PURE__*/_jsxDEV(StyledTable, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: subscribarList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (subscriber, index) {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: subscriber.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    color: \"action\",\n                    children: \"Add Value\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 45\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, _this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        sx: {\n          px: 2\n        },\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: subscribarList.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          'aria-label': 'Previous Page'\n        },\n        nextIconButtonProps: {\n          'aria-label': 'Next Page'\n        },\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PaginationMetric, \"s6gh9SHm1iHJu21FH5H37ofYoqg=\");\n\n_c = PaginationMetric;\nexport default PaginationMetric;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationMetric\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/metrics-api/src/app/views/metrics/PaginationMetric.jsx"],"names":["IconButton","Table","TableHead","TableBody","TableRow","TableCell","Icon","TablePagination","React","Box","styled","SimpleCard","StyledTable","theme","whiteSpace","paddingLeft","paddingRight","textTransform","subscribarList","name","PaginationMetric","useState","rowsPerPage","setRowsPerPage","page","setPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","slice","map","subscriber","index","px","length"],"mappings":"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","sourcesContent":["import {\n    IconButton,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    Icon,\n    TablePagination,\n} from '@mui/material'\nimport React from 'react'\nimport { Box, styled } from '@mui/system'\nimport { SimpleCard } from 'app/components'\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n    whiteSpace: 'pre',\n    '& thead': {\n        '& tr': {\n            '& th': {\n                paddingLeft: 0,\n                paddingRight: 0,\n            },\n        },\n    },\n    '& tbody': {\n        '& tr': {\n            '& td': {\n                paddingLeft: 0,\n                textTransform: 'capitalize',\n            },\n        },\n    },\n}))\n\nconst subscribarList = [\n    {\n        name: 'john doe',\n    },\n    {\n        name: 'kessy bryan',\n    },\n    {\n        name: 'kessy bryan',\n    },\n    {\n        name: 'james cassegne',\n    },\n    {\n        name: 'lucy brown',\n    },\n    {\n        name: 'lucy brown',\n    },\n    {\n        name: 'lucy brown',\n    },\n    {\n        name: 'lucy brown',\n    },\n    {\n        name: 'lucy brown',\n    },\n]\n\nconst PaginationMetric = () => {\n    const [rowsPerPage, setRowsPerPage] = React.useState(5)\n    const [page, setPage] = React.useState(0)\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value)\n        setPage(0)\n    }\n\n    return (\n        <SimpleCard title=\"Pagination Table\">\n            <Box width=\"100%\" overflow=\"auto\">\n                <StyledTable>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Name</TableCell>\n                            <TableCell>Action</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {subscribarList\n                            .slice(\n                                page * rowsPerPage,\n                                page * rowsPerPage + rowsPerPage\n                            )\n                            .map((subscriber, index) => (\n                                <TableRow key={index}>\n                                    <TableCell align=\"left\">\n                                        {subscriber.name}\n                                    </TableCell>\n                                    <TableCell>\n                                        <IconButton>\n                                            <Icon color=\"action\">Add Value</Icon>\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                    </TableBody>\n                </StyledTable>\n\n                <TablePagination\n                    sx={{ px: 2 }}\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={subscribarList.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Box>\n        </SimpleCard>\n    )\n}\n\nexport default PaginationMetric\n"]},"metadata":{},"sourceType":"module"}