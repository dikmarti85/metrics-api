{"ast":null,"code":"import _defineProperty from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/metrics-api/src/app/views/metrics/FormDialogMetric.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Grid, Icon } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormDialogMetric(metric) {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _useState = useState({\n    date: new Date()\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleSend(nameParam) {\n    setOpen(false);\n    var url = 'https://metrics-351617.rj.r.appspot.com/metrics/';\n    var data = {\n      name: nameParam\n    };\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).catch(function (error) {\n      return console.error('Error:', error);\n    }).then(function (response) {\n      return console.log('Success:', response);\n    });\n    reload();\n  }\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var reload = function reload() {\n    return window.location.reload();\n  };\n\n  var name = state.name;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClickOpen,\n      children: \"Add Metric\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Add Metric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          onChange: handleChange,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Name\",\n          type: \"text\",\n          name: \"name\",\n          fullWidth: true,\n          value: name,\n          validators: ['required'],\n          errorMessages: ['this field is required']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: function onClick() {\n            return handleSend(name);\n          },\n          color: \"primary\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormDialogMetric, \"1RAdlJx95i6kVnJuPpBjlMOcyII=\");\n\n_c = FormDialogMetric;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDialogMetric\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/metrics-api/src/app/views/metrics/FormDialogMetric.jsx"],"names":["React","useState","Button","Grid","Icon","TextField","Dialog","DialogActions","DialogContent","LocalizationProvider","DialogTitle","DatePicker","AdapterDateFns","FormDialogMetric","metric","open","setOpen","date","Date","state","setState","handleClickOpen","handleClose","handleSend","nameParam","url","data","name","fetch","method","body","JSON","stringify","headers","then","res","json","catch","error","console","response","log","reload","handleChange","event","persist","target","value","window","location"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {Button, Grid, Icon,} from '@mui/material'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport {DatePicker} from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nexport default function FormDialogMetric (metric){\n    const [open, setOpen] = React.useState(false)\n    const [state, setState] = useState({\n        date: new Date(),\n    })\n\n    function handleClickOpen() {\n        setOpen(true)\n    }\n\n    function handleClose() {\n        setOpen(false)\n    }\n\n    function handleSend(nameParam) {\n\n        setOpen(false)\n\n        var url = 'https://metrics-351617.rj.r.appspot.com/metrics/';\n        var data = {name: nameParam};\n\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers:{\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n            .catch(error => console.error('Error:', error))\n            .then(response => console.log('Success:', response));\n\n        reload()\n    }\n\n    const handleChange = (event) => {\n        event.persist()\n        setState({\n            ...state,\n            [event.target.name]: event.target.value,\n        })\n    }\n\n    const reload=()=>window.location.reload();\n\n    const {\n        name,\n    } = state\n\n    return (\n        <div>\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleClickOpen}\n            >\n                Add Metric\n            </Button>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">Add Metric</DialogTitle>\n                <DialogContent>\n                        <TextField\n                            autoFocus\n                            onChange={handleChange}\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Name\"\n                            type=\"text\"\n                            name=\"name\"\n                            fullWidth={true}\n                            value={name}\n                            validators={['required']}\n                            errorMessages={[\n                                'this field is required'\n                            ]}\n                        />\n                </DialogContent>\n\n                <DialogActions>\n                    <Button\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={handleClose}\n                    >\n                        Cancel\n                    </Button>\n                    <Button onClick={() => handleSend(name)}\n                            color=\"primary\">\n                        Send\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}