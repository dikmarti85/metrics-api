{"ast":null,"code":"import _slicedToArray from \"/Users/dimartinez/workspace/matx-react-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/matx-react-master/src/app/views/material-kit/dialog/OptimalSizeDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { styled } from '@mui/system';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport Select from '@mui/material/Select';\nimport Switch from '@mui/material/Switch';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar DialogRoot = styled('div')(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    '& form': {\n      display: 'flex',\n      flexDirection: 'column',\n      margin: 'auto',\n      width: 'fit-content'\n    },\n    '& .formControl': {\n      marginTop: theme.spacing(2),\n      minWidth: 120\n    },\n    '& .formControlLabel': {\n      marginTop: theme.spacing(1)\n    }\n  };\n});\nexport default function MaxWidthDialog() {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      fullWidth = _React$useState4[0],\n      setFullWidth = _React$useState4[1];\n\n  var _React$useState5 = React.useState('sm'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      maxWidth = _React$useState6[0],\n      setMaxWidth = _React$useState6[1];\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleMaxWidthChange(event) {\n    setMaxWidth(event.target.value);\n  }\n\n  function handleFullWidthChange(event) {\n    setFullWidth(event.target.checked);\n  }\n\n  return /*#__PURE__*/_jsxDEV(DialogRoot, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClickOpen,\n      children: \"Open max-width dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"max-width-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"max-width-dialog-title\",\n        children: \"Optional sizes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"You can set my maximum width and whether to adapt or not.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"formControl\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"max-width\",\n              children: \"maxWidth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: maxWidth,\n              onChange: handleMaxWidthChange,\n              inputProps: {\n                name: 'max-width',\n                id: 'max-width'\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: false,\n                children: \"false\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"xs\",\n                children: \"xs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"sm\",\n                children: \"sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"md\",\n                children: \"md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"lg\",\n                children: \"lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"xl\",\n                children: \"xl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            className: \"formControlLabel\",\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: fullWidth,\n              onChange: handleFullWidthChange,\n              value: \"fullWidth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this),\n            label: \"Full width\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MaxWidthDialog, \"p/Oqzeo82DLdYzlT3F5TnsySOcw=\");\n\n_c = MaxWidthDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"MaxWidthDialog\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/matx-react-master/src/app/views/material-kit/dialog/OptimalSizeDialog.jsx"],"names":["React","styled","Button","Dialog","Select","Switch","MenuItem","InputLabel","DialogTitle","FormControl","DialogActions","DialogContent","FormControlLabel","DialogContentText","DialogRoot","theme","display","flexDirection","margin","width","marginTop","spacing","minWidth","MaxWidthDialog","useState","open","setOpen","fullWidth","setFullWidth","maxWidth","setMaxWidth","handleClickOpen","handleClose","handleMaxWidthChange","event","target","value","handleFullWidthChange","checked","name","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { styled } from '@mui/system'\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport Select from '@mui/material/Select'\nimport Switch from '@mui/material/Switch'\nimport MenuItem from '@mui/material/MenuItem'\nimport InputLabel from '@mui/material/InputLabel'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport FormControl from '@mui/material/FormControl'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport DialogContentText from '@mui/material/DialogContentText'\n\nconst DialogRoot = styled('div')(({ theme }) => ({\n    '& form': {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: 'fit-content',\n    },\n    '& .formControl': {\n        marginTop: theme.spacing(2),\n        minWidth: 120,\n    },\n    '& .formControlLabel': {\n        marginTop: theme.spacing(1),\n    },\n}))\n\nexport default function MaxWidthDialog() {\n    const [open, setOpen] = React.useState(false)\n    const [fullWidth, setFullWidth] = React.useState(true)\n    const [maxWidth, setMaxWidth] = React.useState('sm')\n\n    function handleClickOpen() {\n        setOpen(true)\n    }\n    function handleClose() {\n        setOpen(false)\n    }\n    function handleMaxWidthChange(event) {\n        setMaxWidth(event.target.value)\n    }\n    function handleFullWidthChange(event) {\n        setFullWidth(event.target.checked)\n    }\n\n    return (\n        <DialogRoot>\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleClickOpen}\n            >\n                Open max-width dialog\n            </Button>\n            <Dialog\n                fullWidth={fullWidth}\n                maxWidth={maxWidth}\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\">\n                    Optional sizes\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        You can set my maximum width and whether to adapt or\n                        not.\n                    </DialogContentText>\n                    <form noValidate>\n                        <FormControl className='formControl'>\n                            <InputLabel htmlFor=\"max-width\">\n                                maxWidth\n                            </InputLabel>\n                            <Select\n                                value={maxWidth}\n                                onChange={handleMaxWidthChange}\n                                inputProps={{\n                                    name: 'max-width',\n                                    id: 'max-width',\n                                }}\n                            >\n                                <MenuItem value={false}>false</MenuItem>\n                                <MenuItem value=\"xs\">xs</MenuItem>\n                                <MenuItem value=\"sm\">sm</MenuItem>\n                                <MenuItem value=\"md\">md</MenuItem>\n                                <MenuItem value=\"lg\">lg</MenuItem>\n                                <MenuItem value=\"xl\">xl</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <FormControlLabel\n                            className='formControlLabel'\n                            control={\n                                <Switch\n                                    checked={fullWidth}\n                                    onChange={handleFullWidthChange}\n                                    value=\"fullWidth\"\n                                />\n                            }\n                            label=\"Full width\"\n                        />\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </DialogRoot>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}