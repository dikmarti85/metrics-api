{"ast":null,"code":"import _objectSpread from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/metrics-api/src/app/views/metrics/AutocompleteCombo.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { Fragment, lazy, useState } from 'react';\nimport { Autocomplete, TextField } from '@mui/material';\nimport { createFilterOptions } from '@mui/material/Autocomplete';\nimport { styled, useTheme } from '@mui/system';\nimport Loadable from \"../../components/Loadable/Loadable\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { DatePicker } from \"@mui/lab\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Result = Loadable(_c2 = /*#__PURE__*/lazy(_c = function _c() {\n  return import(\"./Result\");\n}));\n_c3 = Result;\nvar MetricChart = Loadable(_c5 = /*#__PURE__*/lazy(_c4 = function _c4() {\n  return import(\"./MetricChart\");\n}));\n_c6 = MetricChart;\nvar AutoComplete = styled(Autocomplete)(function () {\n  return {\n    width: 300,\n    marginBottom: '16px'\n  };\n});\nvar suggestions = [{\n  label: 'Past 5 minutes',\n  value: '0'\n}, {\n  label: 'Past 15 minutes',\n  value: '1'\n}, {\n  label: 'Past 30 minutes',\n  value: '2'\n}, {\n  label: 'Past 1 hour',\n  value: '3'\n}, {\n  label: 'Past 4 hours',\n  value: '4'\n}, {\n  label: 'Past 10 hours',\n  value: '5'\n}, {\n  label: 'Past 1 day',\n  value: '6'\n}, {\n  label: 'Past 2 days',\n  value: '7'\n}, {\n  label: 'Past 7 days',\n  value: '8'\n}, {\n  label: 'Past 1 month',\n  value: '9'\n}, {\n  label: 'Past 3 month',\n  value: '10'\n}, {\n  label: 'Past 1 year',\n  value: '11'\n}];\nvar filter = createFilterOptions();\n\nvar AutocompleteCombo = function AutocompleteCombo() {\n  _s();\n\n  var theme = useTheme();\n  var date = state.date;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      source = _React$useState2[0],\n      setSource = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      value = _React$useState4[0],\n      setValue = _React$useState4[1];\n\n  var _useState = useState({\n    date: new Date()\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      labelsX = _React$useState6[0],\n      setLabelsX = _React$useState6[1];\n\n  var filterOptions = function filterOptions(options, params) {\n    var filtered = filter(options, params);\n\n    if (params.inputValue !== '') {\n      filtered.push({\n        inputValue: params.inputValue,\n        label: \"Add \\\"\".concat(params.inputValue, \"\\\"\")\n      });\n    }\n\n    return filtered;\n  };\n\n  var handleDateChange = function handleDateChange(date) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      date: date\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LocalizationProvider, {\n      dateAdapter: AdapterDateFns,\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        value: date,\n        onChange: handleDateChange,\n        validators: ['required'],\n        errorMessages: ['this field is required'],\n        renderInput: function renderInput(props) {\n          return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, props), {}, {\n            // variant=\"Outlined\"\n            id: \"mui-pickers-date\",\n            label: \"Date\",\n            sx: {\n              mb: 2,\n              width: '100%'\n            }\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(MetricChart, {\n      height: \"350px\",\n      color: [theme.palette.primary.dark, theme.palette.primary.light],\n      values: source\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AutocompleteCombo, \"0HA77nOuXwbHiXiHBvNTsZOfUUg=\", false, function () {\n  return [useTheme];\n});\n\n_c7 = AutocompleteCombo;\nexport default AutocompleteCombo;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Result$Loadable$lazy\");\n$RefreshReg$(_c2, \"Result$Loadable\");\n$RefreshReg$(_c3, \"Result\");\n$RefreshReg$(_c4, \"MetricChart$Loadable$lazy\");\n$RefreshReg$(_c5, \"MetricChart$Loadable\");\n$RefreshReg$(_c6, \"MetricChart\");\n$RefreshReg$(_c7, \"AutocompleteCombo\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/metrics-api/src/app/views/metrics/AutocompleteCombo.jsx"],"names":["React","Fragment","lazy","useState","Autocomplete","TextField","createFilterOptions","styled","useTheme","Loadable","AdapterDateFns","DatePicker","LocalizationProvider","Result","MetricChart","AutoComplete","width","marginBottom","suggestions","label","value","filter","AutocompleteCombo","theme","date","state","source","setSource","setValue","Date","setState","labelsX","setLabelsX","filterOptions","options","params","filtered","inputValue","push","handleDateChange","props","mb","palette","primary","dark","light"],"mappings":"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","sourcesContent":["import React, {Fragment, lazy, useState} from 'react'\nimport {Autocomplete, TextField} from '@mui/material'\nimport {createFilterOptions} from '@mui/material/Autocomplete'\nimport {styled, useTheme} from '@mui/system'\nimport Loadable from \"../../components/Loadable/Loadable\"\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport {DatePicker} from \"@mui/lab\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\n\nconst Result = Loadable(lazy(() => import(\"./Result\")))\nconst MetricChart = Loadable(lazy(() => import(\"./MetricChart\")))\n\nconst AutoComplete = styled(Autocomplete)(() => ({\n    width: 300,\n    marginBottom: '16px',\n}))\n\nconst suggestions = [\n    {label: 'Past 5 minutes', value: '0'},\n    {label: 'Past 15 minutes', value: '1'},\n    {label: 'Past 30 minutes', value: '2'},\n    {label: 'Past 1 hour', value: '3'},\n    {label: 'Past 4 hours', value: '4'},\n    {label: 'Past 10 hours', value: '5'},\n    {label: 'Past 1 day', value: '6'},\n    {label: 'Past 2 days', value: '7'},\n    {label: 'Past 7 days', value: '8'},\n    {label: 'Past 1 month', value: '9'},\n    {label: 'Past 3 month', value: '10'},\n    {label: 'Past 1 year', value: '11'},\n]\n\nconst filter = createFilterOptions()\n\nconst AutocompleteCombo = () => {\n    const theme = useTheme()\n\n    const {\n        date,\n    } = state\n\n    const [source, setSource] = React.useState([])\n    const [value, setValue] = React.useState(null)\n    const [state, setState] = useState({\n        date: new Date(),\n    })\n\n    const [labelsX, setLabelsX] = React.useState([])\n\n    const filterOptions = (options, params) => {\n        const filtered = filter(options, params)\n        if (params.inputValue !== '') {\n            filtered.push({\n                inputValue: params.inputValue,\n                label: `Add \"${params.inputValue}\"`,\n            })\n        }\n        return filtered\n    }\n\n    const handleDateChange = (date) => {\n\n        setState({...state, date})\n    }\n\n    return (\n        <Fragment>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DatePicker\n                    value={date}\n                    onChange={handleDateChange}\n                    validators={['required']}\n                    errorMessages={[\n                        'this field is required'\n                    ]}\n                    renderInput={(props) => (\n                        <TextField\n                            {...props}\n                            // variant=\"Outlined\"\n                            id=\"mui-pickers-date\"\n                            label=\"Date\"\n                            sx={{mb: 2, width: '100%'}}\n                        />\n                    )}\n                />\n            </LocalizationProvider>\n            {\n            <MetricChart\n                height=\"350px\"\n                color={[\n                    theme.palette.primary.dark,\n                    theme.palette.primary.light,\n                ]}\n                values={source}\n            />\n            }\n\n        </Fragment>\n    )\n}\n\nexport default AutocompleteCombo\n"]},"metadata":{},"sourceType":"module"}