{"ast":null,"code":"import _asyncToGenerator from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/metrics-api/src/app/views/metrics/PaginationMetric.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/regenerator/index.js\";\nimport { IconButton, Table, TableHead, TableBody, TableRow, TableCell, Icon, TablePagination } from '@mui/material';\nimport React, { useEffect, useState } from \"react\";\nimport { Box, styled } from '@mui/system';\nimport { SimpleCard } from 'app/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Container = styled('div')(function (_ref) {\n  var _ref2;\n\n  var theme = _ref.theme;\n  return _ref2 = {\n    margin: '30px'\n  }, _defineProperty(_ref2, theme.breakpoints.down('sm'), {\n    margin: '16px'\n  }), _defineProperty(_ref2, '& .breadcrumb', _defineProperty({\n    marginBottom: '30px'\n  }, theme.breakpoints.down('sm'), {\n    marginBottom: '16px'\n  })), _ref2;\n});\nvar StyledTable = styled(Table)(function (_ref3) {\n  var theme = _ref3.theme;\n  return {\n    whiteSpace: 'pre',\n    '& thead': {\n      '& tr': {\n        '& th': {\n          paddingLeft: 0,\n          paddingRight: 0\n        }\n      }\n    },\n    '& tbody': {\n      '& tr': {\n        '& td': {\n          paddingLeft: 0,\n          textTransform: 'capitalize'\n        }\n      }\n    }\n  };\n});\n\nvar PaginationMetric = function PaginationMetric() {\n  _s();\n\n  var _React$useState = React.useState(5),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      rowsPerPage = _React$useState2[0],\n      setRowsPerPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      page = _React$useState4[0],\n      setPage = _React$useState4[1];\n\n  var initialValue = [];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      status = _React$useState6[0],\n      setStatus = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      metrics = _React$useState8[0],\n      setMetrics = _React$useState8[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  var handleClickMetric = function handleClickMetric(metricId) {\n    console.log(metricId);\n  };\n\n  var getData = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var resp, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (status) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 3;\n              return fetch(\"https://metrics-351617.rj.r.appspot.com/metrics/\");\n\n            case 3:\n              resp = _context.sent;\n              _context.next = 6;\n              return resp.json();\n\n            case 6:\n              data = _context.sent;\n              setMetrics(data.content);\n              setStatus(true);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      py: \"12px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n      title: \"Metrics\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        width: \"100%\",\n        overflow: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(StyledTable, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: metrics.map(function (metric, index) {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: metric.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: function onClick() {\n                      return handleClickMetric(metric.id);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Icon, {\n                      color: \"error\",\n                      children: \"Add Metric Value\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 45\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, _this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          sx: {\n            px: 2\n          },\n          rowsPerPageOptions: [5, 10, 25],\n          component: \"div\",\n          count: initialValue.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          backIconButtonProps: {\n            'aria-label': 'Previous Page'\n          },\n          nextIconButtonProps: {\n            'aria-label': 'Next Page'\n          },\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PaginationMetric, \"do2E9CGvTfLnqnMUJ5KBXtSZiMc=\");\n\n_c = PaginationMetric;\nexport default PaginationMetric;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationMetric\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/metrics-api/src/app/views/metrics/PaginationMetric.jsx"],"names":["IconButton","Table","TableHead","TableBody","TableRow","TableCell","Icon","TablePagination","React","useEffect","useState","Box","styled","SimpleCard","Container","theme","margin","breakpoints","down","marginBottom","StyledTable","whiteSpace","paddingLeft","paddingRight","textTransform","PaginationMetric","rowsPerPage","setRowsPerPage","page","setPage","initialValue","status","setStatus","metrics","setMetrics","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","handleClickMetric","metricId","console","log","getData","fetch","resp","json","data","content","map","metric","index","name","id","px","length"],"mappings":";;;;;;;;;AAAA,SACIA,UADJ,EAEIC,KAFJ,EAGIC,SAHJ,EAIIC,SAJJ,EAKIC,QALJ,EAMIC,SANJ,EAOIC,IAPJ,EAQIC,eARJ,QASO,eATP;AAUA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,gBAA3B;;AAEA,IAAMC,SAAS,GAAGF,MAAM,CAAC,KAAD,CAAN,CAAc;AAAA;;AAAA,MAAGG,KAAH,QAAGA,KAAH;AAAA;AAC5BC,IAAAA,MAAM,EAAE;AADoB,4BAE3BD,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAF2B,EAEI;AAC5BF,IAAAA,MAAM,EAAE;AADoB,GAFJ,0BAK5B,eAL4B;AAMxBG,IAAAA,YAAY,EAAE;AANU,KAOvBJ,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAPuB,EAOQ;AAC5BC,IAAAA,YAAY,EAAE;AADc,GAPR;AAAA,CAAd,CAAlB;AAaA,IAAMC,WAAW,GAAGR,MAAM,CAACX,KAAD,CAAN,CAAc;AAAA,MAAGc,KAAH,SAAGA,KAAH;AAAA,SAAgB;AAC9CM,IAAAA,UAAU,EAAE,KADkC;AAE9C,eAAW;AACP,cAAQ;AACJ,gBAAQ;AACJC,UAAAA,WAAW,EAAE,CADT;AAEJC,UAAAA,YAAY,EAAE;AAFV;AADJ;AADD,KAFmC;AAU9C,eAAW;AACP,cAAQ;AACJ,gBAAQ;AACJD,UAAAA,WAAW,EAAE,CADT;AAEJE,UAAAA,aAAa,EAAE;AAFX;AADJ;AADD;AAVmC,GAAhB;AAAA,CAAd,CAApB;;AAoBA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA;;AAC3B,wBAAsCjB,KAAK,CAACE,QAAN,CAAe,CAAf,CAAtC;AAAA;AAAA,MAAOgB,WAAP;AAAA,MAAoBC,cAApB;;AACA,yBAAwBnB,KAAK,CAACE,QAAN,CAAe,CAAf,CAAxB;AAAA;AAAA,MAAOkB,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,YAAY,GAAG,EAArB;;AACA,yBAA4BtB,KAAK,CAACE,QAAN,CAAe,KAAf,CAA5B;AAAA;AAAA,MAAOqB,MAAP;AAAA,MAAeC,SAAf;;AAEA,yBAA8BxB,KAAK,CAACE,QAAN,CAAe,EAAf,CAA9B;AAAA;AAAA,MAAOuB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAQC,OAAR,EAAoB;AACzCR,IAAAA,OAAO,CAACQ,OAAD,CAAP;AACH,GAFD;;AAIA,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACF,KAAD,EAAW;AACvCT,IAAAA,cAAc,CAAC,CAACS,KAAK,CAACG,MAAN,CAAaC,KAAf,CAAd;AACAX,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAHD;;AAKA,MAAMY,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAc;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACF,GAFD;;AAIA,MAAMG,OAAO;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACRd,MADQ;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEWe,KAAK,CAAC,kDAAD,CAFhB;;AAAA;AAEFC,cAAAA,IAFE;AAAA;AAAA,qBAGWA,IAAI,CAACC,IAAL,EAHX;;AAAA;AAGFC,cAAAA,IAHE;AAIRf,cAAAA,UAAU,CAACe,IAAI,CAACC,OAAN,CAAV;AACAlB,cAAAA,SAAS,CAAC,IAAD,CAAT;;AALQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPa,OAAO;AAAA;AAAA;AAAA,KAAb;;AASApC,EAAAA,SAAS,CAAC,YAAM;AACXoC,IAAAA,OAAO;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,KAAK,EAAC,MAAX;AAAkB,QAAA,QAAQ,EAAC,MAA3B;AAAA,gCACI,QAAC,WAAD;AAAA,kCACI,QAAC,SAAD;AAAA,mCACI,QAAC,QAAD;AAAA,sCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,mBADJ,eAOI,QAAC,SAAD;AAAA,sBACKZ,OAAO,CAACkB,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT;AAAA,kCACT,QAAC,QAAD;AAAA,wCACI,QAAC,SAAD;AAAW,kBAAA,KAAK,EAAC,MAAjB;AAAA,4BACKD,MAAM,CAACE;AADZ;AAAA;AAAA;AAAA;AAAA,yBADJ,eAII,QAAC,SAAD;AAAA,yCACI,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAE;AAAA,6BAAMb,iBAAiB,CAACW,MAAM,CAACG,EAAR,CAAvB;AAAA,qBAArB;AAAA,2CACI,QAAC,IAAD;AAAM,sBAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,yBAJJ;AAAA,iBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA,uBADS;AAAA,aAAZ;AADL;AAAA;AAAA;AAAA;AAAA,mBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAwBI,QAAC,eAAD;AACI,UAAA,EAAE,EAAE;AAAEG,YAAAA,EAAE,EAAE;AAAN,WADR;AAEI,UAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAFxB;AAGI,UAAA,SAAS,EAAC,KAHd;AAII,UAAA,KAAK,EAAE1B,YAAY,CAAC2B,MAJxB;AAKI,UAAA,WAAW,EAAE/B,WALjB;AAMI,UAAA,IAAI,EAAEE,IANV;AAOI,UAAA,mBAAmB,EAAE;AACjB,0BAAc;AADG,WAPzB;AAUI,UAAA,mBAAmB,EAAE;AACjB,0BAAc;AADG,WAVzB;AAaI,UAAA,YAAY,EAAEO,gBAblB;AAcI,UAAA,mBAAmB,EAAEG;AAdzB;AAAA;AAAA;AAAA;AAAA,iBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAgDH,CAjFD;;GAAMb,gB;;KAAAA,gB;AAmFN,eAAeA,gBAAf","sourcesContent":["import {\n    IconButton,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    Icon,\n    TablePagination,\n} from '@mui/material'\nimport React, { useEffect, useState } from \"react\";\nimport { Box, styled } from '@mui/system'\nimport { SimpleCard } from 'app/components'\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n    '& .breadcrumb': {\n        marginBottom: '30px',\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '16px',\n        },\n    },\n}))\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n    whiteSpace: 'pre',\n    '& thead': {\n        '& tr': {\n            '& th': {\n                paddingLeft: 0,\n                paddingRight: 0,\n            },\n        },\n    },\n    '& tbody': {\n        '& tr': {\n            '& td': {\n                paddingLeft: 0,\n                textTransform: 'capitalize',\n            },\n        },\n    },\n}))\n\nconst PaginationMetric = () => {\n    const [rowsPerPage, setRowsPerPage] = React.useState(5)\n    const [page, setPage] = React.useState(0)\n    const initialValue = []\n    const [status, setStatus] = React.useState(false)\n\n    const [metrics, setMetrics] = React.useState([]);\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value)\n        setPage(0)\n    }\n\n    const handleClickMetric = (metricId) => {\n       console.log(metricId)\n    }\n\n    const getData = async () => {\n        if(!status){\n            const resp = await fetch(\"https://metrics-351617.rj.r.appspot.com/metrics/\");\n            const data = await resp.json();\n            setMetrics(data.content);\n            setStatus(true);\n        }\n    };\n\n    useEffect(() => {\n         getData();\n    }, []);\n\n    return (\n        <Container>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"Metrics\">\n                <Box width=\"100%\" overflow=\"auto\">\n                    <StyledTable>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Name</TableCell>\n                                <TableCell>Action</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {metrics.map((metric, index) => (\n                                <TableRow key={index}>\n                                    <TableCell align=\"left\">\n                                        {metric.name}\n                                    </TableCell>\n                                    <TableCell>\n                                        <IconButton onClick={() => handleClickMetric(metric.id)}>\n                                            <Icon color=\"error\">Add Metric Value</Icon>\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </StyledTable>\n\n                    <TablePagination\n                        sx={{ px: 2 }}\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={initialValue.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        backIconButtonProps={{\n                            'aria-label': 'Previous Page',\n                        }}\n                        nextIconButtonProps={{\n                            'aria-label': 'Next Page',\n                        }}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                    />\n                </Box>\n            </SimpleCard>\n        </Container>\n    )\n}\n\nexport default PaginationMetric\n"]},"metadata":{},"sourceType":"module"}