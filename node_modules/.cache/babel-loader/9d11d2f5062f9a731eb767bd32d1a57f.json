{"ast":null,"code":"import _slicedToArray from \"/Users/dimartinez/workspace/matx-react-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/matx-react-master/src/app/components/NotificationBar/NotificationBar.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Small, Paragraph } from '../Typography';\nimport { themeShadows } from '../MatxTheme/themeColors';\nimport { getTimeDifference } from 'app/utils/utils.js';\nimport useSettings from 'app/hooks/useSettings';\nimport useNotification from 'app/hooks/useNotification';\nimport { styled, Box, useTheme } from '@mui/system';\nimport { Icon, Badge, Card, Button, IconButton, Drawer, ThemeProvider } from '@mui/material';\nimport { sideNavWidth, topBarHeight } from 'app/utils/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Notification = styled('div')(function () {\n  return {\n    padding: '16px',\n    marginBottom: '16px',\n    display: 'flex',\n    alignItems: 'center',\n    height: topBarHeight,\n    boxShadow: themeShadows[6],\n    '& h5': {\n      marginLeft: '8px',\n      marginTop: 0,\n      marginBottom: 0,\n      fontWeight: '500'\n    }\n  };\n});\nvar NotificationCard = styled(Box)(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    position: 'relative',\n    '&:hover': {\n      '& .messageTime': {\n        display: 'none'\n      },\n      '& .deleteButton': {\n        opacity: '1'\n      }\n    },\n    '& .messageTime': {\n      color: theme.palette.text.secondary\n    },\n    '& .icon': {\n      fontSize: '1.25rem'\n    }\n  };\n});\nvar DeleteButton = styled(IconButton)(function (_ref2) {\n  var theme = _ref2.theme;\n  return {\n    opacity: '0',\n    position: 'absolute',\n    right: 5,\n    marginTop: 9,\n    marginRight: '24px',\n    background: 'rgba(0, 0, 0, 0.01)'\n  };\n});\nvar CardLeftContent = styled('div')(function (_ref3) {\n  var theme = _ref3.theme;\n  return {\n    padding: '12px 8px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    background: 'rgba(0, 0, 0, 0.01)',\n    '& small': {\n      fontWeight: '500',\n      marginLeft: '16px',\n      color: theme.palette.text.secondary\n    }\n  };\n});\nvar Heading = styled('span')(function (_ref4) {\n  var theme = _ref4.theme;\n  return {\n    fontWeight: '500',\n    marginLeft: '16px',\n    color: theme.palette.text.secondary\n  };\n});\n\nvar NotificationBar = function NotificationBar(_ref5) {\n  _s();\n\n  var container = _ref5.container;\n\n  var _useSettings = useSettings(),\n      settings = _useSettings.settings;\n\n  var theme = useTheme();\n  var secondary = theme.palette.text.secondary;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      panelOpen = _React$useState2[0],\n      setPanelOpen = _React$useState2[1];\n\n  var _useNotification = useNotification(),\n      deleteNotification = _useNotification.deleteNotification,\n      clearNotifications = _useNotification.clearNotifications,\n      notifications = _useNotification.notifications;\n\n  var handleDrawerToggle = function handleDrawerToggle() {\n    setPanelOpen(!panelOpen);\n  };\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette;\n\n  var textColor = palette.text.primary;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleDrawerToggle,\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        color: \"secondary\",\n        badgeContent: notifications === null || notifications === void 0 ? void 0 : notifications.length,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          sx: {\n            color: textColor\n          },\n          children: \"notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: settings.themes[settings.activeTheme],\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        width: '100px',\n        container: container,\n        variant: \"temporary\",\n        anchor: 'right',\n        open: panelOpen,\n        onClose: handleDrawerToggle,\n        ModalProps: {\n          keepMounted: true\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: sideNavWidth\n          },\n          children: [/*#__PURE__*/_jsxDEV(Notification, {\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              color: \"primary\",\n              children: \"notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, _this), notifications === null || notifications === void 0 ? void 0 : notifications.map(function (notification) {\n            return /*#__PURE__*/_jsxDEV(NotificationCard, {\n              children: [/*#__PURE__*/_jsxDEV(DeleteButton, {\n                size: \"small\",\n                className: \"deleteButton\",\n                onClick: function onClick() {\n                  return deleteNotification(notification.id);\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  className: \"icon\",\n                  children: \"clear\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 37\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\".concat(notification.path),\n                onClick: handleDrawerToggle,\n                style: {\n                  textDecoration: 'none'\n                },\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  sx: {\n                    mx: 2,\n                    mb: 3\n                  },\n                  elevation: 3,\n                  children: [/*#__PURE__*/_jsxDEV(CardLeftContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      display: \"flex\",\n                      children: [/*#__PURE__*/_jsxDEV(Icon, {\n                        className: \"icon\",\n                        color: notification.icon.color,\n                        children: notification.icon.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 49\n                      }, _this), /*#__PURE__*/_jsxDEV(Heading, {\n                        children: notification.heading\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 49\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(Small, {\n                      className: \"messageTime\",\n                      children: [getTimeDifference(new Date(notification.timestamp)), \"ago\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 45\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 41\n                  }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      px: 2,\n                      pt: 1,\n                      pb: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n                      sx: {\n                        m: 0\n                      },\n                      children: notification.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(Small, {\n                      sx: {\n                        color: secondary\n                      },\n                      children: notification.subtitle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 45\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 41\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, _this)]\n            }, notification.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, _this);\n          }), !!(notifications !== null && notifications !== void 0 && notifications.length) && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              color: secondary\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: clearNotifications,\n              children: \"Clear Notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(NotificationBar, \"eWZSR668yLVW0+pyg5vTDmagvG8=\", false, function () {\n  return [useSettings, useTheme, useNotification, useTheme];\n});\n\n_c = NotificationBar;\nexport default NotificationBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationBar\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/matx-react-master/src/app/components/NotificationBar/NotificationBar.jsx"],"names":["React","Fragment","Link","Small","Paragraph","themeShadows","getTimeDifference","useSettings","useNotification","styled","Box","useTheme","Icon","Badge","Card","Button","IconButton","Drawer","ThemeProvider","sideNavWidth","topBarHeight","Notification","padding","marginBottom","display","alignItems","height","boxShadow","marginLeft","marginTop","fontWeight","NotificationCard","theme","position","opacity","color","palette","text","secondary","fontSize","DeleteButton","right","marginRight","background","CardLeftContent","justifyContent","Heading","NotificationBar","container","settings","useState","panelOpen","setPanelOpen","deleteNotification","clearNotifications","notifications","handleDrawerToggle","textColor","primary","length","themes","activeTheme","keepMounted","width","map","notification","id","path","textDecoration","mx","mb","icon","name","heading","Date","timestamp","px","pt","pb","m","title","subtitle"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Small, Paragraph } from '../Typography'\r\nimport { themeShadows } from '../MatxTheme/themeColors'\r\nimport { getTimeDifference } from 'app/utils/utils.js'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport useNotification from 'app/hooks/useNotification'\r\nimport { styled, Box, useTheme } from '@mui/system'\r\nimport {\r\n    Icon,\r\n    Badge,\r\n    Card,\r\n    Button,\r\n    IconButton,\r\n    Drawer,\r\n    ThemeProvider,\r\n} from '@mui/material'\r\nimport { sideNavWidth, topBarHeight } from 'app/utils/constant'\r\n\r\nconst Notification = styled('div')(() => ({\r\n    padding: '16px',\r\n    marginBottom: '16px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: topBarHeight,\r\n    boxShadow: themeShadows[6],\r\n    '& h5': {\r\n        marginLeft: '8px',\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n        fontWeight: '500',\r\n    },\r\n}))\r\n\r\nconst NotificationCard = styled(Box)(({ theme }) => ({\r\n    position: 'relative',\r\n    '&:hover': {\r\n        '& .messageTime': {\r\n            display: 'none',\r\n        },\r\n        '& .deleteButton': {\r\n            opacity: '1',\r\n        },\r\n    },\r\n    '& .messageTime': {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    '& .icon': { fontSize: '1.25rem' },\r\n}))\r\n\r\nconst DeleteButton = styled(IconButton)(({ theme }) => ({\r\n    opacity: '0',\r\n    position: 'absolute',\r\n    right: 5,\r\n    marginTop: 9,\r\n    marginRight: '24px',\r\n    background: 'rgba(0, 0, 0, 0.01)',\r\n}))\r\n\r\nconst CardLeftContent = styled('div')(({ theme }) => ({\r\n    padding: '12px 8px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    background: 'rgba(0, 0, 0, 0.01)',\r\n    '& small': {\r\n        fontWeight: '500',\r\n        marginLeft: '16px',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}))\r\n\r\nconst Heading = styled('span')(({ theme }) => ({\r\n    fontWeight: '500',\r\n    marginLeft: '16px',\r\n    color: theme.palette.text.secondary,\r\n}))\r\n\r\nconst NotificationBar = ({ container }) => {\r\n    const { settings } = useSettings()\r\n    const theme = useTheme()\r\n    const secondary = theme.palette.text.secondary\r\n    const [panelOpen, setPanelOpen] = React.useState(false)\r\n    const { deleteNotification, clearNotifications, notifications } =\r\n        useNotification()\r\n\r\n    const handleDrawerToggle = () => {\r\n        setPanelOpen(!panelOpen)\r\n    }\r\n\r\n    const { palette } = useTheme()\r\n    const textColor = palette.text.primary\r\n\r\n    return (\r\n        <Fragment>\r\n            <IconButton onClick={handleDrawerToggle}>\r\n                <Badge color=\"secondary\" badgeContent={notifications?.length}>\r\n                    <Icon sx={{ color: textColor }}>notifications</Icon>\r\n                </Badge>\r\n            </IconButton>\r\n\r\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n                <Drawer\r\n                    width={'100px'}\r\n                    container={container}\r\n                    variant=\"temporary\"\r\n                    anchor={'right'}\r\n                    open={panelOpen}\r\n                    onClose={handleDrawerToggle}\r\n                    ModalProps={{\r\n                        keepMounted: true,\r\n                    }}\r\n                >\r\n                    <Box sx={{ width: sideNavWidth }}>\r\n                        <Notification>\r\n                            <Icon color=\"primary\">notifications</Icon>\r\n                            <h5>Notifications</h5>\r\n                        </Notification>\r\n\r\n                        {notifications?.map((notification) => (\r\n                            <NotificationCard key={notification.id}>\r\n                                <DeleteButton\r\n                                    size=\"small\"\r\n                                    className=\"deleteButton\"\r\n                                    onClick={() =>\r\n                                        deleteNotification(notification.id)\r\n                                    }\r\n                                >\r\n                                    <Icon className=\"icon\">clear</Icon>\r\n                                </DeleteButton>\r\n                                <Link\r\n                                    to={`/${notification.path}`}\r\n                                    onClick={handleDrawerToggle}\r\n                                    style={{ textDecoration: 'none' }}\r\n                                >\r\n                                    <Card sx={{ mx: 2, mb: 3 }} elevation={3}>\r\n                                        <CardLeftContent>\r\n                                            <Box display=\"flex\">\r\n                                                <Icon\r\n                                                    className=\"icon\"\r\n                                                    color={\r\n                                                        notification.icon.color\r\n                                                    }\r\n                                                >\r\n                                                    {notification.icon.name}\r\n                                                </Icon>\r\n                                                <Heading>\r\n                                                    {notification.heading}\r\n                                                </Heading>\r\n                                            </Box>\r\n                                            <Small className=\"messageTime\">\r\n                                                {getTimeDifference(\r\n                                                    new Date(\r\n                                                        notification.timestamp\r\n                                                    )\r\n                                                )}\r\n                                                ago\r\n                                            </Small>\r\n                                        </CardLeftContent>\r\n                                        <Box sx={{ px: 2, pt: 1, pb: 2 }}>\r\n                                            <Paragraph sx={{ m: 0 }}>\r\n                                                {notification.title}\r\n                                            </Paragraph>\r\n                                            <Small sx={{ color: secondary }}>\r\n                                                {notification.subtitle}\r\n                                            </Small>\r\n                                        </Box>\r\n                                    </Card>\r\n                                </Link>\r\n                            </NotificationCard>\r\n                        ))}\r\n                        {!!notifications?.length && (\r\n                            <Box sx={{ color: secondary }}>\r\n                                <Button onClick={clearNotifications}>\r\n                                    Clear Notifications\r\n                                </Button>\r\n                            </Box>\r\n                        )}\r\n                    </Box>\r\n                </Drawer>\r\n            </ThemeProvider>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NotificationBar\r\n"]},"metadata":{},"sourceType":"module"}