{"ast":null,"code":"import _asyncToGenerator from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/metrics-api/src/app/views/metrics/CalculateMetricView.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/regenerator/index.js\";\nimport React, { Fragment, lazy, useEffect, useState } from 'react';\nimport { Autocomplete, Button, Grid, Icon, TextField } from '@mui/material';\nimport { styled, useTheme } from '@mui/system';\nimport Loadable from \"../../components/Loadable/Loadable\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { DatePicker } from \"@mui/lab\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport { Span } from \"../../components/Typography\";\nimport { createFilterOptions } from '@mui/material/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar MetricChart = Loadable(_c2 = /*#__PURE__*/lazy(_c = function _c() {\n  return import(\"./MetricChart\");\n}));\n_c3 = MetricChart;\nvar AutoComplete = styled(Autocomplete)(function () {\n  return {\n    width: 300,\n    marginBottom: '16px'\n  };\n});\nvar suggestions = [{\n  label: 'Past 5 minutes',\n  value: '0'\n}, {\n  label: 'Past 15 minutes',\n  value: '1'\n}, {\n  label: 'Past 30 minutes',\n  value: '2'\n}, {\n  label: 'Past 1 hour',\n  value: '3'\n}, {\n  label: 'Past 4 hours',\n  value: '4'\n}, {\n  label: 'Past 10 hours',\n  value: '5'\n}, {\n  label: 'Past 1 day',\n  value: '6'\n}, {\n  label: 'Past 2 days',\n  value: '7'\n}, {\n  label: 'Past 7 days',\n  value: '8'\n}, {\n  label: 'Past 1 month',\n  value: '9'\n}, {\n  label: 'Past 3 month',\n  value: '10'\n}, {\n  label: 'Past 1 year',\n  value: '11'\n}];\n\nvar CalculateMetricView = function CalculateMetricView() {\n  _s();\n\n  var theme = useTheme();\n  var filter = createFilterOptions();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      status = _React$useState2[0],\n      setStatus = _React$useState2[1];\n\n  var _React$useState3 = React.useState([{}]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      metrics = _React$useState4[0],\n      setMetrics = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      source = _React$useState6[0],\n      setSource = _React$useState6[1];\n\n  var _React$useState7 = React.useState(null),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      valueComboTime = _React$useState8[0],\n      setValueComboTime = _React$useState8[1];\n\n  var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      valueComboMetric = _React$useState10[0],\n      setValueComboMetric = _React$useState10[1];\n\n  var _useState = useState({\n    date: new Date()\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _React$useState11 = React.useState([]),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      labelsX = _React$useState12[0],\n      setLabelsX = _React$useState12[1];\n\n  var calculateValuesAxisX = function calculateValuesAxisX(paramTime) {\n    var current = new Date();\n    var myPastDate = new Date(current);\n    var labels = []; // 5 minutes\n\n    if (paramTime == 0) {\n      myPastDate.setMinutes(myPastDate.getMinutes() - 5);\n      var initialDate = myPastDate;\n\n      for (var i = 0; i <= 5; i++) {\n        var hour = initialDate.toLocaleString('en-US', {\n          hour: '2-digit'\n        });\n        var minute = initialDate.toLocaleString('en-US', {\n          minute: '2-digit'\n        });\n        labelsX[i] = \"\".concat(hour, \":\").concat(minute);\n        initialDate.setMinutes(initialDate.getMinutes() + 1);\n      }\n    } // 15 minutes\n\n\n    if (paramTime == 1) {\n      myPastDate.setMinutes(myPastDate.getMinutes() - 15);\n      var _initialDate = myPastDate;\n\n      for (var i = 0; i <= 5; i++) {\n        var hour = _initialDate.toLocaleString('en-US', {\n          hour: '2-digit'\n        });\n\n        var minute = _initialDate.toLocaleString('en-US', {\n          minute: '2-digit'\n        });\n\n        labelsX[i] = \"\".concat(hour, \":\").concat(minute);\n\n        _initialDate.setMinutes(_initialDate.getMinutes() + 3);\n      }\n    } // 30 minutes\n\n\n    if (paramTime == 2) {\n      myPastDate.setMinutes(myPastDate.getMinutes() - 30);\n      var _initialDate2 = myPastDate;\n\n      for (var i = 0; i <= 5; i++) {\n        var hour = _initialDate2.toLocaleString('en-US', {\n          hour: '2-digit'\n        });\n\n        var minute = _initialDate2.toLocaleString('en-US', {\n          minute: '2-digit'\n        });\n\n        labelsX[i] = \"\".concat(hour, \":\").concat(minute);\n\n        _initialDate2.setMinutes(_initialDate2.getMinutes() + 6);\n      }\n    } // 1 hour\n\n\n    if (paramTime == 3) {\n      myPastDate.setHours(myPastDate.getHours() - 1);\n      var _initialDate3 = myPastDate;\n\n      for (var i = 0; i <= 5; i++) {\n        labelsX[i] = _initialDate3.toLocaleTimeString('en-GB', {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n\n        _initialDate3.setMinutes(_initialDate3.getMinutes() + 12);\n      }\n    } // 4 hour\n\n\n    if (paramTime == 4) {\n      myPastDate.setHours(myPastDate.getHours() - 4);\n      var _initialDate4 = myPastDate;\n\n      for (var i = 0; i <= 5; i++) {\n        labelsX[i] = _initialDate4.toLocaleTimeString('en-GB', {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n\n        _initialDate4.setMinutes(_initialDate4.getMinutes() + 48);\n      }\n    } // 10 hour\n\n\n    if (paramTime == 5) {\n      myPastDate.setHours(myPastDate.getHours() - 10);\n      var _initialDate5 = myPastDate;\n\n      for (var i = 0; i <= 5; i++) {\n        labelsX[i] = _initialDate5.toLocaleTimeString('en-GB', {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n\n        _initialDate5.setMinutes(_initialDate5.getMinutes() + 120);\n      }\n    } // 1 day\n\n\n    if (paramTime == 6) {\n      myPastDate.setDate(myPastDate.getDate() - 1);\n      var _initialDate6 = myPastDate;\n\n      for (var i = 0; i <= 8; i++) {\n        labelsX[i] = _initialDate6.toLocaleTimeString('en-GB', {\n          weekday: \"short\",\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n\n        _initialDate6.setHours(_initialDate6.getHours() + 3);\n      }\n    } // 2 day\n\n\n    if (paramTime == 7) {\n      myPastDate.setDate(myPastDate.getDate() - 2);\n      var _initialDate7 = myPastDate;\n\n      for (var i = 0; i <= 8; i++) {\n        labelsX[i] = _initialDate7.toLocaleTimeString('en-GB', {\n          weekday: \"short\",\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n\n        _initialDate7.setHours(_initialDate7.getHours() + 6);\n      }\n    } // 7 day\n\n\n    if (paramTime == 8) {\n      myPastDate.setDate(myPastDate.getDate() - 7);\n      var _initialDate8 = myPastDate;\n\n      for (var i = 0; i <= 8; i++) {\n        labelsX[i] = _initialDate8.toLocaleTimeString('en-GB', {\n          weekday: \"short\",\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n\n        _initialDate8.setHours(_initialDate8.getHours() + 21);\n      }\n    } // 1 month\n\n\n    if (paramTime == 9) {\n      myPastDate.setMonth(myPastDate.getMonth() - 1);\n      var _initialDate9 = myPastDate;\n\n      for (var i = 0; i <= 4; i++) {\n        var month = _initialDate9.toLocaleString('en-GB', {\n          month: \"short\"\n        });\n\n        labelsX[i] = \"\".concat(_initialDate9.getDate(), \" \").concat(month);\n\n        _initialDate9.setHours(_initialDate9.getHours() + 180);\n      }\n    } // 3 month\n\n\n    if (paramTime == 10) {\n      myPastDate.setMonth(myPastDate.getMonth() - 3);\n      var _initialDate10 = myPastDate;\n\n      for (var i = 0; i <= 6; i++) {\n        var month = _initialDate10.toLocaleString('en-GB', {\n          month: \"short\"\n        });\n\n        labelsX[i] = \"\".concat(_initialDate10.getDate(), \" \").concat(month);\n\n        _initialDate10.setDate(_initialDate10.getDate() + 15);\n      }\n    } // 1 year\n\n\n    if (paramTime == 11) {\n      myPastDate.setFullYear(myPastDate.getFullYear() - 1);\n      var _initialDate11 = myPastDate;\n\n      for (var i = 0; i <= 12; i++) {\n        var month = _initialDate11.toLocaleString('en-GB', {\n          month: \"short\"\n        });\n\n        labelsX[i] = \"\".concat(_initialDate11.getFullYear(), \"/\").concat(month);\n\n        _initialDate11.setMonth(_initialDate11.getMonth() + 1);\n      }\n    }\n\n    setLabelsX(labels);\n  };\n\n  var handleComboMetricChange = function handleComboMetricChange(event, newValue) {\n    if (newValue && newValue.inputValue) {\n      setValueComboMetric({\n        label: newValue.inputValue\n      });\n      return;\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      metricName: newValue.value\n    }));\n  };\n\n  var handleComboTimeChange = function handleComboTimeChange(event, newValue) {\n    if (newValue && newValue.inputValue) {\n      setValueComboTime({\n        label: newValue.inputValue\n      });\n      return;\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      time: newValue.value\n    }));\n    calculateValuesAxisX(newValue.value);\n  };\n\n  var handleDateChange = function handleDateChange(date) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      date: date\n    }));\n  };\n\n  var handleDateEndChange = function handleDateEndChange(dateEnd) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      dateEnd: dateEnd\n    }));\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    console.log('date: ' + date);\n    console.log('timeType: ' + time);\n    console.log('metricName: ' + metricName);\n    var url = 'https://metrics-351617.rj.r.appspot.com/metrics/calc';\n    var data = {\n      dateFrom: date,\n      timeType: time,\n      metricName: metricName\n    };\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).catch(function (error) {\n      return console.error('Error:', error);\n    }).then(function (response) {\n      console.log('Success:', response);\n      setSource(response.labels);\n    });\n  };\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var resp, data, metricList;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://metrics-351617.rj.r.appspot.com/metrics/\");\n\n            case 2:\n              resp = _context.sent;\n              _context.next = 5;\n              return resp.json();\n\n            case 5:\n              data = _context.sent;\n              metricList = [];\n              data.content.forEach(function (metric) {\n                return metricList.push({\n                  label: metric.name,\n                  value: metric.name\n                });\n              });\n              setMetrics(metricList);\n              setStatus(true);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var reload = function reload() {\n    return window.location.reload();\n  };\n\n  var metricName = state.metricName,\n      time = state.time,\n      date = state.date,\n      dateEnd = state.dateEnd;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: handleSubmit,\n      onError: function onError() {\n        return null;\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        direction: \"reverse\",\n        children: [/*#__PURE__*/_jsxDEV(AutoComplete, {\n          options: suggestions,\n          getOptionLabel: function getOptionLabel(option) {\n            return option.label;\n          },\n          onChange: handleComboTimeChange,\n          renderInput: function renderInput(params) {\n            return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n              label: \"Select time\",\n              variant: \"outlined\",\n              fullWidth: true\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 33\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            inputFormat: \"dd/MM/yyyy\",\n            value: date,\n            onChange: handleDateChange,\n            renderInput: function renderInput(props) {\n              return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, props), {}, {\n                // variant=\"Outlined\"\n                id: \"mui-pickers-date\",\n                label: \"Date From\",\n                sx: {\n                  mb: 2,\n                  width: '56%'\n                }\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 37\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            inputFormat: \"dd/MM/yyyy\",\n            value: date,\n            onChange: handleDateEndChange,\n            renderInput: function renderInput(props) {\n              return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, props), {}, {\n                // variant=\"Outlined\"\n                id: \"mui-pickers-date\",\n                label: \"Date End\",\n                sx: {\n                  mb: 2,\n                  width: '56%'\n                }\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 37\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n          options: metrics,\n          getOptionLabel: function getOptionLabel(option) {\n            return option.label;\n          },\n          onChange: handleComboMetricChange,\n          renderInput: function renderInput(params) {\n            return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n              label: \"Select metric name\",\n              variant: \"outlined\",\n              fullWidth: true\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 33\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        type: \"submit\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Span, {\n          sx: {\n            pl: 1,\n            textTransform: 'capitalize'\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(MetricChart, {\n      height: \"350px\",\n      color: [theme.palette.primary.dark, theme.palette.primary.light],\n      values: source\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CalculateMetricView, \"BP5nJ/M+2YTJcOEu44S6yoyReng=\", false, function () {\n  return [useTheme];\n});\n\n_c4 = CalculateMetricView;\nexport default CalculateMetricView;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MetricChart$Loadable$lazy\");\n$RefreshReg$(_c2, \"MetricChart$Loadable\");\n$RefreshReg$(_c3, \"MetricChart\");\n$RefreshReg$(_c4, \"CalculateMetricView\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/metrics-api/src/app/views/metrics/CalculateMetricView.jsx"],"names":["React","Fragment","lazy","useEffect","useState","Autocomplete","Button","Grid","Icon","TextField","styled","useTheme","Loadable","AdapterDateFns","DatePicker","LocalizationProvider","ValidatorForm","Span","createFilterOptions","MetricChart","AutoComplete","width","marginBottom","suggestions","label","value","CalculateMetricView","theme","filter","status","setStatus","metrics","setMetrics","source","setSource","valueComboTime","setValueComboTime","valueComboMetric","setValueComboMetric","date","Date","state","setState","labelsX","setLabelsX","calculateValuesAxisX","paramTime","current","myPastDate","labels","setMinutes","getMinutes","initialDate","i","hour","toLocaleString","minute","setHours","getHours","toLocaleTimeString","setDate","getDate","weekday","setMonth","getMonth","month","setFullYear","getFullYear","handleComboMetricChange","event","newValue","inputValue","metricName","handleComboTimeChange","time","handleDateChange","handleDateEndChange","dateEnd","handleSubmit","console","log","url","data","dateFrom","timeType","fetch","method","body","JSON","stringify","headers","then","res","json","catch","error","response","getData","resp","metricList","content","forEach","metric","push","name","reload","window","location","option","params","props","mb","pl","textTransform","palette","primary","dark","light"],"mappings":"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","sourcesContent":["import React, {Fragment, lazy, useEffect, useState} from 'react'\nimport {Autocomplete, Button, Grid, Icon, TextField} from '@mui/material'\nimport {styled, useTheme} from '@mui/system'\nimport Loadable from \"../../components/Loadable/Loadable\"\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport {DatePicker} from \"@mui/lab\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport {ValidatorForm} from \"react-material-ui-form-validator\";\nimport {Span} from \"../../components/Typography\";\nimport {createFilterOptions} from '@mui/material/Autocomplete'\nconst MetricChart = Loadable(lazy(() => import(\"./MetricChart\")))\n\nconst AutoComplete = styled(Autocomplete)(() => ({\n    width: 300,\n    marginBottom: '16px',\n}))\n\nconst suggestions = [\n    {label: 'Past 5 minutes', value: '0'},\n    {label: 'Past 15 minutes', value: '1'},\n    {label: 'Past 30 minutes', value: '2'},\n    {label: 'Past 1 hour', value: '3'},\n    {label: 'Past 4 hours', value: '4'},\n    {label: 'Past 10 hours', value: '5'},\n    {label: 'Past 1 day', value: '6'},\n    {label: 'Past 2 days', value: '7'},\n    {label: 'Past 7 days', value: '8'},\n    {label: 'Past 1 month', value: '9'},\n    {label: 'Past 3 month', value: '10'},\n    {label: 'Past 1 year', value: '11'},\n]\n\nconst CalculateMetricView = () => {\n    const theme = useTheme()\n\n    const filter = createFilterOptions()\n    const [status, setStatus] = React.useState(false)\n    const [metrics, setMetrics] = React.useState([{}]);\n    const [source, setSource] = React.useState([])\n    const [valueComboTime, setValueComboTime] = React.useState(null)\n    const [valueComboMetric, setValueComboMetric] = React.useState(null)\n    const [state, setState] = useState({\n        date: new Date(),\n    })\n\n    const [labelsX, setLabelsX] = React.useState([])\n\n    const calculateValuesAxisX = (paramTime) => {\n\n        const current = new Date();\n        const myPastDate = new Date(current);\n        const labels = [];\n\n        // 5 minutes\n        if (paramTime == 0) {\n            myPastDate.setMinutes(myPastDate.getMinutes() - 5)\n            const initialDate = myPastDate;\n\n            for (var i = 0; i <= 5; i++) {\n                var hour = initialDate.toLocaleString('en-US', { hour: '2-digit' })\n                var minute = initialDate.toLocaleString('en-US', { minute: '2-digit' })\n                labelsX[i] = `${hour}:${minute}`\n                initialDate.setMinutes(initialDate.getMinutes() + 1)\n            }\n        }\n\n        // 15 minutes\n        if (paramTime == 1) {\n            myPastDate.setMinutes(myPastDate.getMinutes() - 15)\n            const initialDate = myPastDate;\n\n            for (var i = 0; i <= 5; i++) {\n                var hour = initialDate.toLocaleString('en-US', { hour: '2-digit' })\n                var minute = initialDate.toLocaleString('en-US', { minute: '2-digit' })\n                labelsX[i] = `${hour}:${minute}`\n                initialDate.setMinutes(initialDate.getMinutes() + 3)\n            }\n        }\n\n        // 30 minutes\n        if (paramTime == 2) {\n            myPastDate.setMinutes(myPastDate.getMinutes() - 30)\n            const initialDate = myPastDate;\n\n            for (var i = 0; i <= 5; i++) {\n                var hour = initialDate.toLocaleString('en-US', { hour: '2-digit' })\n                var minute = initialDate.toLocaleString('en-US', { minute: '2-digit' })\n                labelsX[i] = `${hour}:${minute}`\n                initialDate.setMinutes(initialDate.getMinutes() + 6)\n            }\n        }\n\n        // 1 hour\n        if (paramTime == 3) {\n            myPastDate.setHours(myPastDate.getHours() - 1)\n            const initialDate = myPastDate;\n\n            for (var i = 0; i <= 5; i++) {\n                labelsX[i] = initialDate.toLocaleTimeString('en-GB', {hour: '2-digit', minute:'2-digit'});\n                initialDate.setMinutes(initialDate.getMinutes() + 12)\n            }\n        }\n\n        // 4 hour\n        if (paramTime == 4) {\n            myPastDate.setHours(myPastDate.getHours() - 4)\n            const initialDate = myPastDate;\n\n            for (var i = 0; i <= 5; i++) {\n                labelsX[i] = initialDate.toLocaleTimeString('en-GB', {hour: '2-digit', minute:'2-digit'});\n                initialDate.setMinutes(initialDate.getMinutes() + 48)\n            }\n        }\n\n        // 10 hour\n        if (paramTime == 5) {\n            myPastDate.setHours(myPastDate.getHours() - 10)\n            const initialDate = myPastDate;\n\n            for (var i = 0; i <= 5; i++) {\n                labelsX[i] = initialDate.toLocaleTimeString('en-GB', {hour: '2-digit', minute:'2-digit'});\n                initialDate.setMinutes(initialDate.getMinutes() + 120)\n            }\n        }\n\n        // 1 day\n        if (paramTime == 6) {\n            myPastDate.setDate(myPastDate.getDate() - 1)\n            const initialDate = myPastDate;\n\n            for (var i = 0; i <= 8; i++) {\n                labelsX[i] = initialDate.toLocaleTimeString('en-GB', { weekday: \"short\", hour: '2-digit', minute:'2-digit'});\n                initialDate.setHours(initialDate.getHours() + 3)\n            }\n        }\n\n        // 2 day\n        if (paramTime == 7) {\n            myPastDate.setDate(myPastDate.getDate() - 2)\n            const initialDate = myPastDate;\n\n            for (var i = 0; i <= 8; i++) {\n                labelsX[i] = initialDate.toLocaleTimeString('en-GB', { weekday: \"short\", hour: '2-digit', minute:'2-digit'});\n                initialDate.setHours(initialDate.getHours() + 6)\n            }\n        }\n\n        // 7 day\n        if (paramTime == 8) {\n            myPastDate.setDate(myPastDate.getDate() - 7)\n            const initialDate = myPastDate;\n\n            for (var i = 0; i <= 8; i++) {\n                labelsX[i] = initialDate.toLocaleTimeString('en-GB', { weekday: \"short\", hour: '2-digit', minute:'2-digit'});\n                initialDate.setHours(initialDate.getHours() + 21)\n            }\n        }\n\n        // 1 month\n        if (paramTime == 9) {\n            myPastDate.setMonth(myPastDate.getMonth() - 1)\n            const initialDate = myPastDate;\n\n            for (var i = 0; i <= 4; i++) {\n                var month = initialDate.toLocaleString('en-GB', { month: \"short\" })\n                labelsX[i] = `${initialDate.getDate()} ${month}`\n                initialDate.setHours(initialDate.getHours() + 180)\n            }\n        }\n\n        // 3 month\n        if (paramTime == 10) {\n            myPastDate.setMonth(myPastDate.getMonth() - 3)\n            const initialDate = myPastDate;\n\n            for (var i = 0; i <= 6; i++) {\n                var month = initialDate.toLocaleString('en-GB', { month: \"short\" })\n                labelsX[i] = `${initialDate.getDate()} ${month}`\n                initialDate.setDate(initialDate.getDate() + 15)\n            }\n        }\n\n        // 1 year\n        if (paramTime == 11) {\n            myPastDate.setFullYear(myPastDate.getFullYear() - 1)\n            const initialDate = myPastDate;\n\n            for (var i = 0; i <= 12; i++) {\n                var month = initialDate.toLocaleString('en-GB', { month: \"short\" })\n                labelsX[i] = `${initialDate.getFullYear()}/${month}`\n                initialDate.setMonth(initialDate.getMonth() + 1)\n            }\n        }\n\n        setLabelsX(labels)\n    }\n\n\n    const handleComboMetricChange = (event, newValue) => {\n        if (newValue && newValue.inputValue) {\n            setValueComboMetric({\n                label: newValue.inputValue,\n            })\n            return\n        }\n        setState({\n            ...state,\n            metricName: newValue.value,\n        })\n    }\n\n    const handleComboTimeChange = (event, newValue) => {\n        if (newValue && newValue.inputValue) {\n            setValueComboTime({\n                label: newValue.inputValue,\n            })\n            return\n        }\n        setState({\n            ...state,\n            time: newValue.value,\n        })\n\n        calculateValuesAxisX(newValue.value)\n\n    }\n\n    const handleDateChange = (date) => {\n        setState({...state, date})\n    }\n\n    const handleDateEndChange = (dateEnd) => {\n        setState({...state, dateEnd})\n    }\n\n    const handleSubmit = (event) => {\n\n        console.log('date: ' + date);\n        console.log('timeType: ' + time)\n        console.log('metricName: ' + metricName)\n\n        var url = 'https://metrics-351617.rj.r.appspot.com/metrics/calc';\n        var data = {\n            dateFrom: date,\n            timeType: time,\n            metricName: metricName\n        };\n\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers:{\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n            .catch(error => console.error('Error:', error))\n            .then(response => {\n                console.log('Success:', response)\n\n                setSource(response.labels)\n            });\n    }\n\n    const getData = async () => {\n\n        const resp = await fetch(\"https://metrics-351617.rj.r.appspot.com/metrics/\");\n        const data = await resp.json();\n        let metricList = []\n\n        data.content.forEach((metric) => (\n            metricList.push({label: metric.name, value: metric.name})\n        ))\n\n        setMetrics(metricList);\n        setStatus(true);\n    };\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const reload = () => window.location.reload();\n\n    const {\n        metricName,\n        time,\n        date,\n        dateEnd,\n    } = state\n\n    return (\n        <Fragment>\n            <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\n                <Grid container spacing={2} direction=\"reverse\">\n\n                        <AutoComplete\n                            options={suggestions}\n                            getOptionLabel={(option) => option.label}\n                            onChange={handleComboTimeChange}\n                            renderInput={(params) => (\n                                <TextField\n                                    {...params}\n                                    label=\"Select time\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                />\n                            )}\n                        />\n\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <DatePicker\n                                inputFormat=\"dd/MM/yyyy\"\n                                value={date}\n                                onChange={handleDateChange}\n                                renderInput={(props) => (\n                                    <TextField\n                                        {...props}\n                                        // variant=\"Outlined\"\n                                        id=\"mui-pickers-date\"\n                                        label=\"Date From\"\n                                        sx={{mb: 2, width: '56%'}}\n                                    />\n                                )}\n                            />\n                        </LocalizationProvider>\n\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <DatePicker\n                                inputFormat=\"dd/MM/yyyy\"\n                                value={date}\n                                onChange={handleDateEndChange}\n                                renderInput={(props) => (\n                                    <TextField\n                                        {...props}\n                                        // variant=\"Outlined\"\n                                        id=\"mui-pickers-date\"\n                                        label=\"Date End\"\n                                        sx={{mb: 2, width: '56%'}}\n                                    />\n                                )}\n                            />\n                        </LocalizationProvider>\n\n                        <AutoComplete\n                            options={metrics}\n                            getOptionLabel={(option) => option.label}\n                            onChange={handleComboMetricChange}\n                            renderInput={(params) => (\n                                <TextField\n                                    {...params}\n                                    label=\"Select metric name\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                />\n                            )}\n                        />\n                    </Grid>\n\n\n                <Button color=\"primary\" variant=\"contained\" type=\"submit\" onSubmit={handleSubmit}>\n                    <Icon>send</Icon>\n                    <Span sx={{pl: 1, textTransform: 'capitalize'}}>\n                        Send\n                    </Span>\n                </Button>\n            </ValidatorForm>\n\n            {\n                <MetricChart\n                    height=\"350px\"\n                    color={[\n                        theme.palette.primary.dark,\n                        theme.palette.primary.light,\n                    ]}\n                    values={source}\n                />\n            }\n\n        </Fragment>\n    )\n}\n\nexport default CalculateMetricView\n"]},"metadata":{},"sourceType":"module"}