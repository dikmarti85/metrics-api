{"ast":null,"code":"import _objectSpread from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/metrics-api/src/app/views/metrics/FormDialogMetric.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Grid, Icon } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormDialogMetric(metric) {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _useState = useState({\n    date: new Date()\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  function handleClickOpen() {\n    setOpen(true);\n    console.log('metricId ' + JSON.stringify(metric));\n    console.log('metricId ' + metric.metric);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleSend(valueParam, dateParam) {\n    console.log('valueParam ' + valueParam);\n    console.log('dateParam ' + dateParam);\n    console.log('metricId ' + metric);\n    setOpen(false);\n    var url = 'https://metrics-351617.rj.r.appspot.com/metrics/value';\n    var metricData = {\n      id: metric.id\n    };\n    console.log('metricData ' + metricData.id);\n    var data = {\n      value: valueParam,\n      time: dateParam,\n      metric: {\n        metricData: metricData\n      }\n    };\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).catch(function (error) {\n      return console.error('Error:', error);\n    }).then(function (response) {\n      return console.log('Success:', response);\n    });\n  }\n\n  var handleDateChange = function handleDateChange(date) {\n    console.log('date' + date);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      date: date\n    }));\n  };\n\n  var value = state.value,\n      date = state.date;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClickOpen,\n      children: \"Add Metric Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Add Metric Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"value\",\n          label: \"Value\",\n          type: \"text\",\n          name: \"value\",\n          fullWidth: true,\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            value: date,\n            onChange: handleDateChange,\n            renderInput: function renderInput(props) {\n              return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, props), {}, {\n                // variant=\"Outlined\"\n                id: \"mui-pickers-date\",\n                label: \"Date\",\n                sx: {\n                  mb: 2,\n                  width: '100%'\n                }\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: function onClick() {\n            return handleSend(value, date);\n          },\n          color: \"primary\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormDialogMetric, \"1RAdlJx95i6kVnJuPpBjlMOcyII=\");\n\n_c = FormDialogMetric;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDialogMetric\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/metrics-api/src/app/views/metrics/FormDialogMetric.jsx"],"names":["React","useState","Button","Grid","Icon","TextField","Dialog","DialogActions","DialogContent","LocalizationProvider","DialogTitle","DatePicker","AdapterDateFns","FormDialogMetric","metric","open","setOpen","date","Date","state","setState","handleClickOpen","console","log","JSON","stringify","handleClose","handleSend","valueParam","dateParam","url","metricData","id","data","value","time","fetch","method","body","headers","then","res","json","catch","error","response","handleDateChange","props","mb","width"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {Button, Grid, Icon,} from '@mui/material'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport {DatePicker} from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nexport default function FormDialogMetric (metric){\n    const [open, setOpen] = React.useState(false)\n    const [state, setState] = useState({\n        date: new Date(),\n    })\n\n    function handleClickOpen() {\n        setOpen(true)\n        console.log('metricId ' + JSON.stringify(metric))\n        console.log('metricId ' + metric.metric)\n\n    }\n\n    function handleClose() {\n        setOpen(false)\n    }\n\n    function handleSend(valueParam, dateParam) {\n\n        console.log('valueParam ' + valueParam)\n        console.log('dateParam ' + dateParam)\n        console.log('metricId ' + metric)\n\n        setOpen(false)\n\n        var url = 'https://metrics-351617.rj.r.appspot.com/metrics/value';\n        var metricData = {\n            id: metric.id\n        }\n        console.log('metricData ' + metricData.id)\n        var data = {value: valueParam,\n                     time: dateParam,\n                     metric: {metricData}\n                    };\n\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers:{\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n            .catch(error => console.error('Error:', error))\n            .then(response => console.log('Success:', response));\n    }\n\n    const handleDateChange = (date) => {\n        console.log('date' + date)\n        setState({...state, date})\n    }\n\n\n    const {\n        value,\n        date,\n    } = state\n\n    return (\n        <div>\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleClickOpen}\n            >\n                Add Metric Value\n            </Button>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">Add Metric Value</DialogTitle>\n                <DialogContent>\n\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"value\"\n                            label=\"Value\"\n                            type=\"text\"\n                            name=\"value\"\n                            fullWidth={true}\n                            value={value}\n                        />\n                        <div><br/></div>\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <DatePicker\n                                value={date}\n                                onChange={handleDateChange}\n                                renderInput={(props) => (\n                                    <TextField\n                                        {...props}\n                                        // variant=\"Outlined\"\n                                        id=\"mui-pickers-date\"\n                                        label=\"Date\"\n                                        sx={{mb: 2, width: '100%'}}\n                                    />\n                                )}\n                            />\n                        </LocalizationProvider>\n\n                </DialogContent>\n\n                <DialogActions>\n                    <Button\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={handleClose}\n                    >\n                        Cancel\n                    </Button>\n                    <Button onClick={() => handleSend(value, date)} color=\"primary\">\n                        Send\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}