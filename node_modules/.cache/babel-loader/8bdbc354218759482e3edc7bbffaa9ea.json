{"ast":null,"code":"import _classCallCheck from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/dimartinez/workspace/metrics-api/src/app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx\";\nimport React from 'react';\nimport { styled } from '@mui/system';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Button, Snackbar, IconButton } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar StyledIconButton = styled(IconButton)(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    padding: theme.spacing(0.5)\n  };\n});\n\nvar ConsecutiveSnackbars = /*#__PURE__*/function (_React$Component) {\n  _inherits(ConsecutiveSnackbars, _React$Component);\n\n  var _super = _createSuper(ConsecutiveSnackbars);\n\n  function ConsecutiveSnackbars() {\n    var _this;\n\n    _classCallCheck(this, ConsecutiveSnackbars);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.queue = [];\n    _this.state = {\n      open: false\n    };\n\n    _this.handleClick = function (message) {\n      return function () {\n        _this.queue.push({\n          message: message,\n          key: new Date().getTime()\n        });\n\n        if (_this.state.open) {\n          // immediately begin dismissing current message\n          // to start showing new one\n          _this.setState({\n            open: false\n          });\n        } else {\n          _this.processQueue();\n        }\n      };\n    };\n\n    _this.processQueue = function () {\n      if (_this.queue.length > 0) {\n        _this.setState({\n          messageInfo: _this.queue.shift(),\n          open: true\n        });\n      }\n    };\n\n    _this.handleClose = function (event, reason) {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleExited = function () {\n      _this.processQueue();\n    };\n\n    return _this;\n  }\n\n  _createClass(ConsecutiveSnackbars, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state$messageIn = this.state.messageInfo,\n          messageInfo = _this$state$messageIn === void 0 ? {} : _this$state$messageIn;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleClick('Message A'),\n          children: \"Show message A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleClick('Message B'),\n          children: \"Show message B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'left'\n          },\n          open: this.state.open,\n          autoHideDuration: 6000,\n          onClose: this.handleClose,\n          onExited: this.handleExited,\n          ContentProps: {\n            'aria-describedby': 'message-id'\n          },\n          message: /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"message-id\",\n            children: messageInfo.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 30\n          }, this),\n          action: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            size: \"small\",\n            onClick: this.handleClose,\n            children: \"UNDO\"\n          }, \"undo\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StyledIconButton, {\n            \"aria-label\": \"Close\",\n            color: \"inherit\",\n            onClick: this.handleClose,\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, \"close\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, messageInfo.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return ConsecutiveSnackbars;\n}(React.Component);\n\nexport default ConsecutiveSnackbars;","map":{"version":3,"sources":["/Users/dimartinez/workspace/metrics-api/src/app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx"],"names":["React","styled","CloseIcon","Button","Snackbar","IconButton","StyledIconButton","theme","padding","spacing","ConsecutiveSnackbars","queue","state","open","handleClick","message","push","key","Date","getTime","setState","processQueue","length","messageInfo","shift","handleClose","event","reason","handleExited","vertical","horizontal","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { styled } from '@mui/system'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { Button, Snackbar, IconButton } from '@mui/material'\n\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\n    padding: theme.spacing(0.5)\n}))\n\nclass ConsecutiveSnackbars extends React.Component {\n    queue = []\n    state = {\n        open: false,\n    }\n\n    handleClick = (message) => () => {\n        this.queue.push({\n            message,\n            key: new Date().getTime(),\n        })\n\n        if (this.state.open) {\n            // immediately begin dismissing current message\n            // to start showing new one\n            this.setState({ open: false })\n        } else {\n            this.processQueue()\n        }\n    }\n\n    processQueue = () => {\n        if (this.queue.length > 0) {\n            this.setState({\n                messageInfo: this.queue.shift(),\n                open: true,\n            })\n        }\n    }\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return\n        }\n        this.setState({ open: false })\n    }\n\n    handleExited = () => {\n        this.processQueue()\n    }\n\n    render() {\n        const { messageInfo = {} } = this.state\n\n        return (\n            <div>\n                <Button onClick={this.handleClick('Message A')}>\n                    Show message A\n                </Button>\n                <Button onClick={this.handleClick('Message B')}>\n                    Show message B\n                </Button>\n                <Snackbar\n                    key={messageInfo.key}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={this.state.open}\n                    autoHideDuration={6000}\n                    onClose={this.handleClose}\n                    onExited={this.handleExited}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                    message={<span id=\"message-id\">{messageInfo.message}</span>}\n                    action={[\n                        <Button\n                            key=\"undo\"\n                            color=\"secondary\"\n                            size=\"small\"\n                            onClick={this.handleClose}\n                        >\n                            UNDO\n                        </Button>,\n                        <StyledIconButton\n                            key=\"close\"\n                            aria-label=\"Close\"\n                            color=\"inherit\"\n                            onClick={this.handleClose}\n                        >\n                            <CloseIcon />\n                        </StyledIconButton>,\n                    ]}\n                />\n            </div>\n        )\n    }\n}\n\nexport default ConsecutiveSnackbars\n"]},"metadata":{},"sourceType":"module"}