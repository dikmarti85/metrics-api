{"ast":null,"code":"import _slicedToArray from\"/home/dikmarti/metrics-api/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import useAuth from'app/hooks/useAuth';import{flat}from'app/utils/utils';import React,{useState,useEffect,useContext}from'react';import{Navigate,useLocation}from'react-router-dom';import AppContext from'../contexts/AppContext';import{AllPages}from'../routes/routes';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var getUserRoleAuthStatus=function getUserRoleAuthStatus(pathname,user,routes){if(!user){return false;}var matched=routes.find(function(r){return r.path===pathname;});var authenticated=matched&&matched.auth&&matched.auth.length?matched.auth.includes(user.role):true;console.log(matched,user);return authenticated;};var AuthGuard=function AuthGuard(_ref){var children=_ref.children;var _useAuth=useAuth(),isAuthenticated=_useAuth.isAuthenticated,user=_useAuth.user;// return <>{isAuthenticated ? children : <Navigate to=\"/session/signin\" />}</>\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),previouseRoute=_useState2[0],setPreviousRoute=_useState2[1];var _useLocation=useLocation(),pathname=_useLocation.pathname;var routes=flat(AllPages());console.log(user);var isUserRoleAuthenticated=getUserRoleAuthStatus(pathname,user,routes);var authenticated=isAuthenticated&&isUserRoleAuthenticated;// IF YOU NEED ROLE BASED AUTHENTICATION,\n// UNCOMMENT ABOVE TWO LINES, getUserRoleAuthStatus METHOD AND user VARIABLE\n// AND COMMENT OUT BELOW LINE\n// let authenticated = isAuthenticated\nuseEffect(function(){if(previouseRoute!==null)setPreviousRoute(pathname);},[pathname,previouseRoute]);if(authenticated)return/*#__PURE__*/_jsx(_Fragment,{children:children});else{return/*#__PURE__*/_jsx(Navigate,{to:\"/session/signin\",state:{redirectUrl:previouseRoute}})// <Redirect\n//     to={{\n//         pathname: '/session/signin',\n//         state: { redirectUrl: previouseRoute },\n//     }}\n// />\n;}};export default AuthGuard;","map":null,"metadata":{},"sourceType":"module"}