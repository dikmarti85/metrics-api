{"ast":null,"code":"import _defineProperty from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/metrics-api/src/app/views/material-kit/forms/SimpleForm.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Icon, Grid, Radio, RadioGroup, FormControlLabel, Checkbox } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { Span } from 'app/components/Typography';\nimport React, { useState, useEffect } from 'react';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport { DatePicker } from '@mui/lab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar TextField = styled(TextValidator)(function () {\n  return {\n    width: '100%',\n    marginBottom: '16px'\n  };\n});\n\nvar SimpleForm = function SimpleForm() {\n  _s();\n\n  var _useState = useState({\n    date: new Date()\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  useEffect(function () {\n    ValidatorForm.addValidationRule('isPasswordMatch', function (value) {\n      console.log(value);\n\n      if (value !== state.password) {\n        return false;\n      }\n\n      return true;\n    });\n    return function () {\n      return ValidatorForm.removeValidationRule('isPasswordMatch');\n    };\n  }, [state.password]);\n\n  var handleSubmit = function handleSubmit(event) {// console.log(\"submitted\");\n    // console.log(event);\n  };\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var handleDateChange = function handleDateChange(date) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      date: date\n    }));\n  };\n\n  var username = state.username,\n      firstName = state.firstName,\n      creditCard = state.creditCard,\n      mobile = state.mobile,\n      password = state.password,\n      confirmPassword = state.confirmPassword,\n      gender = state.gender,\n      date = state.date,\n      email = state.email;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: handleSubmit,\n      onError: function onError() {\n        return null;\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 6,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 6,\n          md: 6,\n          sm: 12,\n          xs: 12,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            type: \"text\",\n            name: \"username\",\n            id: \"standard-basic\",\n            onChange: handleChange,\n            value: username || '',\n            validators: ['required', 'minStringLength: 4', 'maxStringLength: 9'],\n            label: \"Username (Min length 4, Max length 9)\",\n            errorMessages: ['this field is required']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"First Name\",\n            onChange: handleChange,\n            type: \"text\",\n            name: \"firstName\",\n            value: firstName || '',\n            validators: ['required'],\n            errorMessages: ['this field is required']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            onChange: handleChange,\n            type: \"email\",\n            name: \"email\",\n            value: email || '',\n            validators: ['required', 'isEmail'],\n            errorMessages: ['this field is required', 'email is not valid']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              value: date,\n              onChange: handleDateChange,\n              renderInput: function renderInput(props) {\n                return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, props), {}, {\n                  // variant=\"Outlined\"\n                  id: \"mui-pickers-date\",\n                  label: \"Date picker\",\n                  sx: {\n                    mb: 2,\n                    width: '100%'\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 37\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n            sx: {\n              mb: 4\n            },\n            label: \"Credit Card\",\n            onChange: handleChange,\n            type: \"number\",\n            name: \"creditCard\",\n            value: creditCard || '',\n            validators: ['required', 'minStringLength:16', 'maxStringLength: 16'],\n            errorMessages: ['this field is required']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 6,\n          md: 6,\n          sm: 12,\n          xs: 12,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Mobile Nubmer\",\n            onChange: handleChange,\n            type: \"text\",\n            name: \"mobile\",\n            value: mobile || '',\n            validators: ['required'],\n            errorMessages: ['this field is required']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            onChange: handleChange,\n            name: \"password\",\n            type: \"password\",\n            value: password || '',\n            validators: ['required'],\n            errorMessages: ['this field is required']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Confirm Password\",\n            onChange: handleChange,\n            name: \"confirmPassword\",\n            type: \"password\",\n            value: confirmPassword || '',\n            validators: ['required', 'isPasswordMatch'],\n            errorMessages: ['this field is required', \"password didn't match\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            sx: {\n              mb: 2\n            },\n            value: gender || '',\n            name: \"gender\",\n            onChange: handleChange,\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"Male\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 42\n              }, _this),\n              label: \"Male\",\n              labelPlacement: \"end\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"Female\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 42\n              }, _this),\n              label: \"Female\",\n              labelPlacement: \"end\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"Others\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 42\n              }, _this),\n              label: \"Others\",\n              labelPlacement: \"end\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 38\n            }, _this),\n            label: \"I have read and agree to the terms of service.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        type: \"submit\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Span, {\n          sx: {\n            pl: 1,\n            textTransform: 'capitalize'\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(SimpleForm, \"903vSnP0NmFaMfCTGuFPyBuB5sk=\");\n\n_c = SimpleForm;\nexport default SimpleForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleForm\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/metrics-api/src/app/views/material-kit/forms/SimpleForm.jsx"],"names":["Button","Icon","Grid","Radio","RadioGroup","FormControlLabel","Checkbox","styled","Span","React","useState","useEffect","ValidatorForm","TextValidator","AdapterDateFns","LocalizationProvider","DatePicker","TextField","width","marginBottom","SimpleForm","date","Date","state","setState","addValidationRule","value","console","log","password","removeValidationRule","handleSubmit","event","handleChange","persist","target","name","handleDateChange","username","firstName","creditCard","mobile","confirmPassword","gender","email","mt","props","mb","pl","textTransform"],"mappings":";;;;;;;;AAAA,SACIA,MADJ,EAEIC,IAFJ,EAGIC,IAHJ,EAIIC,KAJJ,EAKIC,UALJ,EAMIC,gBANJ,EAOIC,QAPJ,QAQO,eARP;AASA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,IAAT,QAAqB,2BAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,SAASC,UAAT,QAA2B,UAA3B;;AAEA,IAAMC,SAAS,GAAGV,MAAM,CAACM,aAAD,CAAN,CAAsB;AAAA,SAAO;AAC3CK,IAAAA,KAAK,EAAE,MADoC;AAE3CC,IAAAA,YAAY,EAAE;AAF6B,GAAP;AAAA,CAAtB,CAAlB;;AAKA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AACrB,kBAA0BV,QAAQ,CAAC;AAC/BW,IAAAA,IAAI,EAAE,IAAIC,IAAJ;AADyB,GAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAIAb,EAAAA,SAAS,CAAC,YAAM;AACZC,IAAAA,aAAa,CAACa,iBAAd,CAAgC,iBAAhC,EAAmD,UAACC,KAAD,EAAW;AAC1DC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAEA,UAAIA,KAAK,KAAKH,KAAK,CAACM,QAApB,EAA8B;AAC1B,eAAO,KAAP;AACH;;AACD,aAAO,IAAP;AACH,KAPD;AAQA,WAAO;AAAA,aAAMjB,aAAa,CAACkB,oBAAd,CAAmC,iBAAnC,CAAN;AAAA,KAAP;AACH,GAVQ,EAUN,CAACP,KAAK,CAACM,QAAP,CAVM,CAAT;;AAYA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW,CAC5B;AACA;AACH,GAHD;;AAKA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACD,KAAD,EAAW;AAC5BA,IAAAA,KAAK,CAACE,OAAN;AACAV,IAAAA,QAAQ,iCACDD,KADC,2BAEHS,KAAK,CAACG,MAAN,CAAaC,IAFV,EAEiBJ,KAAK,CAACG,MAAN,CAAaT,KAF9B,GAAR;AAIH,GAND;;AAQA,MAAMW,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAChB,IAAD,EAAU;AAC/BG,IAAAA,QAAQ,iCAAMD,KAAN;AAAaF,MAAAA,IAAI,EAAJA;AAAb,OAAR;AACH,GAFD;;AAIA,MACIiB,QADJ,GAUIf,KAVJ,CACIe,QADJ;AAAA,MAEIC,SAFJ,GAUIhB,KAVJ,CAEIgB,SAFJ;AAAA,MAGIC,UAHJ,GAUIjB,KAVJ,CAGIiB,UAHJ;AAAA,MAIIC,MAJJ,GAUIlB,KAVJ,CAIIkB,MAJJ;AAAA,MAKIZ,QALJ,GAUIN,KAVJ,CAKIM,QALJ;AAAA,MAMIa,eANJ,GAUInB,KAVJ,CAMImB,eANJ;AAAA,MAOIC,MAPJ,GAUIpB,KAVJ,CAOIoB,MAPJ;AAAA,MAQItB,IARJ,GAUIE,KAVJ,CAQIF,IARJ;AAAA,MASIuB,KATJ,GAUIrB,KAVJ,CASIqB,KATJ;AAYA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEb,YAAzB;AAAuC,MAAA,OAAO,EAAE;AAAA,eAAM,IAAN;AAAA,OAAhD;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,EAAE,EAAE,CAAtB;AAAyB,UAAA,EAAE,EAAE,EAA7B;AAAiC,UAAA,EAAE,EAAE,EAArC;AAAyC,UAAA,EAAE,EAAE;AAAEc,YAAAA,EAAE,EAAE;AAAN,WAA7C;AAAA,kCACI,QAAC,SAAD;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,EAAE,EAAC,gBAHP;AAII,YAAA,QAAQ,EAAEZ,YAJd;AAKI,YAAA,KAAK,EAAEK,QAAQ,IAAI,EALvB;AAMI,YAAA,UAAU,EAAE,CACR,UADQ,EAER,oBAFQ,EAGR,oBAHQ,CANhB;AAWI,YAAA,KAAK,EAAC,uCAXV;AAYI,YAAA,aAAa,EAAE,CAAC,wBAAD;AAZnB;AAAA;AAAA;AAAA;AAAA,mBADJ,eAeI,QAAC,SAAD;AACI,YAAA,KAAK,EAAC,YADV;AAEI,YAAA,QAAQ,EAAEL,YAFd;AAGI,YAAA,IAAI,EAAC,MAHT;AAII,YAAA,IAAI,EAAC,WAJT;AAKI,YAAA,KAAK,EAAEM,SAAS,IAAI,EALxB;AAMI,YAAA,UAAU,EAAE,CAAC,UAAD,CANhB;AAOI,YAAA,aAAa,EAAE,CAAC,wBAAD;AAPnB;AAAA;AAAA;AAAA;AAAA,mBAfJ,eAwBI,QAAC,SAAD;AACI,YAAA,KAAK,EAAC,OADV;AAEI,YAAA,QAAQ,EAAEN,YAFd;AAGI,YAAA,IAAI,EAAC,OAHT;AAII,YAAA,IAAI,EAAC,OAJT;AAKI,YAAA,KAAK,EAAEW,KAAK,IAAI,EALpB;AAMI,YAAA,UAAU,EAAE,CAAC,UAAD,EAAa,SAAb,CANhB;AAOI,YAAA,aAAa,EAAE,CACX,wBADW,EAEX,oBAFW;AAPnB;AAAA;AAAA;AAAA;AAAA,mBAxBJ,eAqCI,QAAC,oBAAD;AAAsB,YAAA,WAAW,EAAE9B,cAAnC;AAAA,mCACI,QAAC,UAAD;AACI,cAAA,KAAK,EAAEO,IADX;AAEI,cAAA,QAAQ,EAAEgB,gBAFd;AAGI,cAAA,WAAW,EAAE,qBAACS,KAAD;AAAA,oCACT,QAAC,SAAD,kCACQA,KADR;AAEI;AACA,kBAAA,EAAE,EAAC,kBAHP;AAII,kBAAA,KAAK,EAAC,aAJV;AAKI,kBAAA,EAAE,EAAE;AAAEC,oBAAAA,EAAE,EAAE,CAAN;AAAS7B,oBAAAA,KAAK,EAAE;AAAhB;AALR;AAAA;AAAA;AAAA;AAAA,yBADS;AAAA;AAHjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,mBArCJ,eAqDI,QAAC,SAAD;AACI,YAAA,EAAE,EAAE;AAAE6B,cAAAA,EAAE,EAAE;AAAN,aADR;AAEI,YAAA,KAAK,EAAC,aAFV;AAGI,YAAA,QAAQ,EAAEd,YAHd;AAII,YAAA,IAAI,EAAC,QAJT;AAKI,YAAA,IAAI,EAAC,YALT;AAMI,YAAA,KAAK,EAAEO,UAAU,IAAI,EANzB;AAOI,YAAA,UAAU,EAAE,CACR,UADQ,EAER,oBAFQ,EAGR,qBAHQ,CAPhB;AAYI,YAAA,aAAa,EAAE,CAAC,wBAAD;AAZnB;AAAA;AAAA;AAAA;AAAA,mBArDJ;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAsEI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,EAAE,EAAE,CAAtB;AAAyB,UAAA,EAAE,EAAE,EAA7B;AAAiC,UAAA,EAAE,EAAE,EAArC;AAAyC,UAAA,EAAE,EAAE;AAAEK,YAAAA,EAAE,EAAE;AAAN,WAA7C;AAAA,kCACI,QAAC,SAAD;AACI,YAAA,KAAK,EAAC,eADV;AAEI,YAAA,QAAQ,EAAEZ,YAFd;AAGI,YAAA,IAAI,EAAC,MAHT;AAII,YAAA,IAAI,EAAC,QAJT;AAKI,YAAA,KAAK,EAAEQ,MAAM,IAAI,EALrB;AAMI,YAAA,UAAU,EAAE,CAAC,UAAD,CANhB;AAOI,YAAA,aAAa,EAAE,CAAC,wBAAD;AAPnB;AAAA;AAAA;AAAA;AAAA,mBADJ,eAUI,QAAC,SAAD;AACI,YAAA,KAAK,EAAC,UADV;AAEI,YAAA,QAAQ,EAAER,YAFd;AAGI,YAAA,IAAI,EAAC,UAHT;AAII,YAAA,IAAI,EAAC,UAJT;AAKI,YAAA,KAAK,EAAEJ,QAAQ,IAAI,EALvB;AAMI,YAAA,UAAU,EAAE,CAAC,UAAD,CANhB;AAOI,YAAA,aAAa,EAAE,CAAC,wBAAD;AAPnB;AAAA;AAAA;AAAA;AAAA,mBAVJ,eAmBI,QAAC,SAAD;AACI,YAAA,KAAK,EAAC,kBADV;AAEI,YAAA,QAAQ,EAAEI,YAFd;AAGI,YAAA,IAAI,EAAC,iBAHT;AAII,YAAA,IAAI,EAAC,UAJT;AAKI,YAAA,KAAK,EAAES,eAAe,IAAI,EAL9B;AAMI,YAAA,UAAU,EAAE,CAAC,UAAD,EAAa,iBAAb,CANhB;AAOI,YAAA,aAAa,EAAE,CACX,wBADW,EAEX,uBAFW;AAPnB;AAAA;AAAA;AAAA;AAAA,mBAnBJ,eA+BI,QAAC,UAAD;AACI,YAAA,EAAE,EAAE;AAAEK,cAAAA,EAAE,EAAE;AAAN,aADR;AAEI,YAAA,KAAK,EAAEJ,MAAM,IAAI,EAFrB;AAGI,YAAA,IAAI,EAAC,QAHT;AAII,YAAA,QAAQ,EAAEV,YAJd;AAKI,YAAA,GAAG,MALP;AAAA,oCAOI,QAAC,gBAAD;AACI,cAAA,KAAK,EAAC,MADV;AAEI,cAAA,OAAO,eAAE,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,uBAFb;AAGI,cAAA,KAAK,EAAC,MAHV;AAII,cAAA,cAAc,EAAC;AAJnB;AAAA;AAAA;AAAA;AAAA,qBAPJ,eAaI,QAAC,gBAAD;AACI,cAAA,KAAK,EAAC,QADV;AAEI,cAAA,OAAO,eAAE,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,uBAFb;AAGI,cAAA,KAAK,EAAC,QAHV;AAII,cAAA,cAAc,EAAC;AAJnB;AAAA;AAAA;AAAA;AAAA,qBAbJ,eAmBI,QAAC,gBAAD;AACI,cAAA,KAAK,EAAC,QADV;AAEI,cAAA,OAAO,eAAE,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,uBAFb;AAGI,cAAA,KAAK,EAAC,QAHV;AAII,cAAA,cAAc,EAAC;AAJnB;AAAA;AAAA;AAAA;AAAA,qBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,mBA/BJ,eAyDI,QAAC,gBAAD;AACI,YAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,qBADb;AAEI,YAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,mBAzDJ;AAAA;AAAA;AAAA;AAAA;AAAA,iBAtEJ;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAsII,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAC,WAAhC;AAA4C,QAAA,IAAI,EAAC,QAAjD;AAAA,gCACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE;AAAEe,YAAAA,EAAE,EAAE,CAAN;AAASC,YAAAA,aAAa,EAAE;AAAxB,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,eAtIJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAiJH,CA/LD;;GAAM7B,U;;KAAAA,U;AAiMN,eAAeA,UAAf","sourcesContent":["import {\n    Button,\n    Icon,\n    Grid,\n    Radio,\n    RadioGroup,\n    FormControlLabel,\n    Checkbox,\n} from '@mui/material'\nimport { styled } from '@mui/system'\nimport { Span } from 'app/components/Typography'\nimport React, { useState, useEffect } from 'react'\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\nimport { DatePicker } from '@mui/lab'\n\nconst TextField = styled(TextValidator)(() => ({\n    width: '100%',\n    marginBottom: '16px',\n}))\n\nconst SimpleForm = () => {\n    const [state, setState] = useState({\n        date: new Date(),\n    })\n\n    useEffect(() => {\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\n            console.log(value)\n\n            if (value !== state.password) {\n                return false\n            }\n            return true\n        })\n        return () => ValidatorForm.removeValidationRule('isPasswordMatch')\n    }, [state.password])\n\n    const handleSubmit = (event) => {\n        // console.log(\"submitted\");\n        // console.log(event);\n    }\n\n    const handleChange = (event) => {\n        event.persist()\n        setState({\n            ...state,\n            [event.target.name]: event.target.value,\n        })\n    }\n\n    const handleDateChange = (date) => {\n        setState({ ...state, date })\n    }\n\n    const {\n        username,\n        firstName,\n        creditCard,\n        mobile,\n        password,\n        confirmPassword,\n        gender,\n        date,\n        email,\n    } = state\n\n    return (\n        <div>\n            <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\n                <Grid container spacing={6}>\n                    <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\n                        <TextField\n                            type=\"text\"\n                            name=\"username\"\n                            id=\"standard-basic\"\n                            onChange={handleChange}\n                            value={username || ''}\n                            validators={[\n                                'required',\n                                'minStringLength: 4',\n                                'maxStringLength: 9',\n                            ]}\n                            label=\"Username (Min length 4, Max length 9)\"\n                            errorMessages={['this field is required']}\n                        />\n                        <TextField\n                            label=\"First Name\"\n                            onChange={handleChange}\n                            type=\"text\"\n                            name=\"firstName\"\n                            value={firstName || ''}\n                            validators={['required']}\n                            errorMessages={['this field is required']}\n                        />\n                        <TextField\n                            label=\"Email\"\n                            onChange={handleChange}\n                            type=\"email\"\n                            name=\"email\"\n                            value={email || ''}\n                            validators={['required', 'isEmail']}\n                            errorMessages={[\n                                'this field is required',\n                                'email is not valid',\n                            ]}\n                        />\n\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <DatePicker\n                                value={date}\n                                onChange={handleDateChange}\n                                renderInput={(props) => (\n                                    <TextField\n                                        {...props}\n                                        // variant=\"Outlined\"\n                                        id=\"mui-pickers-date\"\n                                        label=\"Date picker\"\n                                        sx={{ mb: 2, width: '100%' }}\n                                    />\n                                )}\n                            />\n                        </LocalizationProvider>\n\n                        <TextField\n                            sx={{ mb: 4 }}\n                            label=\"Credit Card\"\n                            onChange={handleChange}\n                            type=\"number\"\n                            name=\"creditCard\"\n                            value={creditCard || ''}\n                            validators={[\n                                'required',\n                                'minStringLength:16',\n                                'maxStringLength: 16',\n                            ]}\n                            errorMessages={['this field is required']}\n                        />\n                    </Grid>\n\n                    <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\n                        <TextField\n                            label=\"Mobile Nubmer\"\n                            onChange={handleChange}\n                            type=\"text\"\n                            name=\"mobile\"\n                            value={mobile || ''}\n                            validators={['required']}\n                            errorMessages={['this field is required']}\n                        />\n                        <TextField\n                            label=\"Password\"\n                            onChange={handleChange}\n                            name=\"password\"\n                            type=\"password\"\n                            value={password || ''}\n                            validators={['required']}\n                            errorMessages={['this field is required']}\n                        />\n                        <TextField\n                            label=\"Confirm Password\"\n                            onChange={handleChange}\n                            name=\"confirmPassword\"\n                            type=\"password\"\n                            value={confirmPassword || ''}\n                            validators={['required', 'isPasswordMatch']}\n                            errorMessages={[\n                                'this field is required',\n                                \"password didn't match\",\n                            ]}\n                        />\n                        <RadioGroup\n                            sx={{ mb: 2 }}\n                            value={gender || ''}\n                            name=\"gender\"\n                            onChange={handleChange}\n                            row\n                        >\n                            <FormControlLabel\n                                value=\"Male\"\n                                control={<Radio color=\"secondary\" />}\n                                label=\"Male\"\n                                labelPlacement=\"end\"\n                            />\n                            <FormControlLabel\n                                value=\"Female\"\n                                control={<Radio color=\"secondary\" />}\n                                label=\"Female\"\n                                labelPlacement=\"end\"\n                            />\n                            <FormControlLabel\n                                value=\"Others\"\n                                control={<Radio color=\"secondary\" />}\n                                label=\"Others\"\n                                labelPlacement=\"end\"\n                            />\n                        </RadioGroup>\n                        <FormControlLabel\n                            control={<Checkbox />}\n                            label=\"I have read and agree to the terms of service.\"\n                        />\n                    </Grid>\n                </Grid>\n                <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n                    <Icon>send</Icon>\n                    <Span sx={{ pl: 1, textTransform: 'capitalize' }}>\n                        Submit\n                    </Span>\n                </Button>\n            </ValidatorForm>\n        </div>\n    )\n}\n\nexport default SimpleForm\n"]},"metadata":{},"sourceType":"module"}