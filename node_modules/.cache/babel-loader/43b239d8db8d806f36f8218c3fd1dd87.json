{"ast":null,"code":"import _objectSpread from \"/Users/dimartinez/workspace/matx-react-master/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/matx-react-master/src/app/views/metrics/MetricChart.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTheme } from '@mui/system';\nimport ReactEcharts from 'echarts-for-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar MetricChart = function MetricChart(_ref) {\n  _s();\n\n  var height = _ref.height,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? [] : _ref$color;\n  var theme = useTheme();\n  var option = {\n    grid: {\n      top: '10%',\n      bottom: '10%',\n      right: '5%'\n    },\n    legend: {\n      show: false\n    },\n    color: ['#223388', 'rgba(34, 51, 136, 0.8)'],\n    barGap: 0,\n    barMaxWidth: '64px',\n    tooltip: {},\n    dataset: {\n      source: [['Month', 'Website', 'App'], ['Jan', 1, 2], ['Feb', 3, 4], ['Mar', 5, 6], ['Apr', 7, 8], ['May', 9, 10], ['June', 11, 12]]\n    },\n    xAxis: {\n      type: 'category',\n      axisLine: {\n        show: false\n      },\n      splitLine: {\n        show: false\n      },\n      axisTick: {\n        show: false\n      },\n      axisLabel: {\n        color: theme.palette.text.secondary,\n        fontSize: 13,\n        fontFamily: 'roboto'\n      }\n    },\n    yAxis: {\n      axisLine: {\n        show: false\n      },\n      axisTick: {\n        show: false\n      },\n      splitLine: {\n        // show: false\n        lineStyle: {\n          color: theme.palette.text.secondary,\n          opacity: 0.15\n        }\n      },\n      axisLabel: {\n        color: theme.palette.text.secondary,\n        fontSize: 13,\n        fontFamily: 'roboto'\n      }\n    },\n    // Declare several bar series, each will be mapped\n    // to a column of dataset.source by default.\n    series: [{\n      type: 'bar'\n    }, {\n      type: 'bar'\n    }]\n  };\n  option.dataset.source.concat([\"Corn\", \"Potato\", \"Radish\"]);\n  option.dataset.source.map(function (row, i) {\n    return row.map(function (col, j) {\n      return console.log('row: ' + row + ', col: ' + col + ' i: ' + i + ' j: ' + j);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(ReactEcharts, {\n    style: {\n      height: height\n    },\n    option: _objectSpread({}, option)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(MetricChart, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = MetricChart;\nexport default MetricChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MetricChart\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/matx-react-master/src/app/views/metrics/MetricChart.jsx"],"names":["React","useTheme","ReactEcharts","MetricChart","height","color","theme","option","grid","top","bottom","right","legend","show","barGap","barMaxWidth","tooltip","dataset","source","xAxis","type","axisLine","splitLine","axisTick","axisLabel","palette","text","secondary","fontSize","fontFamily","yAxis","lineStyle","opacity","series","concat","map","row","i","col","j","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useTheme } from '@mui/system'\nimport ReactEcharts from 'echarts-for-react'\n\nconst MetricChart = ({ height, color = []}) => {\n    const theme = useTheme()\n\n    const option = {\n        grid: {\n            top: '10%',\n            bottom: '10%',\n            right: '5%',\n        },\n        legend: {\n            show: false,\n        },\n        color: ['#223388', 'rgba(34, 51, 136, 0.8)'],\n        barGap: 0,\n        barMaxWidth: '64px',\n        tooltip: {},\n        dataset: {\n            source: [\n                ['Month', 'Website', 'App'],\n                ['Jan', 1, 2],\n                ['Feb', 3, 4],\n                ['Mar', 5, 6],\n                ['Apr', 7, 8],\n                ['May', 9, 10],\n                ['June', 11, 12],\n            ],\n        },\n        xAxis: {\n            type: 'category',\n            axisLine: {\n                show: false,\n            },\n            splitLine: {\n                show: false,\n            },\n            axisTick: {\n                show: false,\n            },\n            axisLabel: {\n                color: theme.palette.text.secondary,\n                fontSize: 13,\n                fontFamily: 'roboto',\n            },\n        },\n        yAxis: {\n            axisLine: {\n                show: false,\n            },\n            axisTick: {\n                show: false,\n            },\n            splitLine: {\n                // show: false\n                lineStyle: {\n                    color: theme.palette.text.secondary,\n                    opacity: 0.15,\n                },\n            },\n            axisLabel: {\n                color: theme.palette.text.secondary,\n                fontSize: 13,\n                fontFamily: 'roboto',\n            },\n        },\n        // Declare several bar series, each will be mapped\n        // to a column of dataset.source by default.\n        series: [{ type: 'bar' }, { type: 'bar' }],\n    }\n\n    option.dataset.source.concat([\"Corn\", \"Potato\", \"Radish\"])\n    option.dataset.source.map((row, i) => (\n        row.map((col, j) => (\n          console.log('row: ' + row + ', col: ' + col + ' i: ' + i + ' j: ' + j)\n        ))\n    ))\n\n    return (\n\n        <ReactEcharts\n            style={{ height: height }}\n            option={{\n                ...option,\n                // color: [...color],\n            }}\n        />\n    )\n}\n\nexport default MetricChart\n"]},"metadata":{},"sourceType":"module"}