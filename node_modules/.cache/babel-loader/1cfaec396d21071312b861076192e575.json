{"ast":null,"code":"import _slicedToArray from \"/Users/dimartinez/workspace/matx-react-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/dimartinez/workspace/matx-react-master/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/matx-react-master/src/app/views/material-kit/snackbar/TransitionSnackbar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grow, Fade, Slide, Button, Snackbar } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SlideTransition(props) {\n  return /*#__PURE__*/_jsxDEV(Slide, _objectSpread(_objectSpread({}, props), {}, {\n    direction: \"up\"\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n}\n\n_c = SlideTransition;\n\nfunction GrowTransition(props) {\n  return /*#__PURE__*/_jsxDEV(Grow, _objectSpread({}, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n}\n\n_c2 = GrowTransition;\nexport default function TransitionsSnackbar() {\n  _s();\n\n  var _React$useState = React.useState({\n    open: false,\n    Transition: Fade\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var handleClick = function handleClick(Transition) {\n    return function () {\n      setState({\n        open: true,\n        Transition: Transition\n      });\n    };\n  };\n\n  function handleClose() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      open: false\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick(GrowTransition),\n      children: \"Grow Transition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick(Fade),\n      children: \"Fade Transition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick(SlideTransition),\n      children: \"Slide Transition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: state.open,\n      onClose: handleClose,\n      TransitionComponent: state.Transition,\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      message: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"message-id\",\n        children: \"I love snacks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TransitionsSnackbar, \"tpqEDSPp4pFEHHK6Bco417tjmIw=\");\n\n_c3 = TransitionsSnackbar;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SlideTransition\");\n$RefreshReg$(_c2, \"GrowTransition\");\n$RefreshReg$(_c3, \"TransitionsSnackbar\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/matx-react-master/src/app/views/material-kit/snackbar/TransitionSnackbar.jsx"],"names":["React","Grow","Fade","Slide","Button","Snackbar","SlideTransition","props","GrowTransition","TransitionsSnackbar","useState","open","Transition","state","setState","handleClick","handleClose"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,QAApC,QAAoD,eAApD;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,sBAAO,QAAC,KAAD,kCAAWA,KAAX;AAAkB,IAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;KAFQD,e;;AAIT,SAASE,cAAT,CAAwBD,KAAxB,EAA+B;AAC3B,sBAAO,QAAC,IAAD,oBAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;MAFQC,c;AAIT,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAC1C,wBAA0BT,KAAK,CAACU,QAAN,CAAe;AACrCC,IAAAA,IAAI,EAAE,KAD+B;AAErCC,IAAAA,UAAU,EAAEV;AAFyB,GAAf,CAA1B;AAAA;AAAA,MAAOW,KAAP;AAAA,MAAcC,QAAd;;AAKA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACH,UAAD;AAAA,WAAgB,YAAM;AACtCE,MAAAA,QAAQ,CAAC;AACLH,QAAAA,IAAI,EAAE,IADD;AAELC,QAAAA,UAAU,EAAVA;AAFK,OAAD,CAAR;AAIH,KALmB;AAAA,GAApB;;AAOA,WAASI,WAAT,GAAuB;AACnBF,IAAAA,QAAQ,iCACDD,KADC;AAEJF,MAAAA,IAAI,EAAE;AAFF,OAAR;AAIH;;AAED,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEI,WAAW,CAACP,cAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEO,WAAW,CAACb,IAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEa,WAAW,CAACT,eAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI,QAAC,QAAD;AACI,MAAA,IAAI,EAAEO,KAAK,CAACF,IADhB;AAEI,MAAA,OAAO,EAAEK,WAFb;AAGI,MAAA,mBAAmB,EAAEH,KAAK,CAACD,UAH/B;AAII,MAAA,YAAY,EAAE;AACV,4BAAoB;AADV,OAJlB;AAOI,MAAA,OAAO,eAAE;AAAM,QAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPb;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GAxCuBH,mB;;MAAAA,mB","sourcesContent":["import React from 'react'\nimport { Grow, Fade, Slide, Button, Snackbar } from '@mui/material'\n\nfunction SlideTransition(props) {\n    return <Slide {...props} direction=\"up\" />\n}\n\nfunction GrowTransition(props) {\n    return <Grow {...props} />\n}\n\nexport default function TransitionsSnackbar() {\n    const [state, setState] = React.useState({\n        open: false,\n        Transition: Fade,\n    })\n\n    const handleClick = (Transition) => () => {\n        setState({\n            open: true,\n            Transition,\n        })\n    }\n\n    function handleClose() {\n        setState({\n            ...state,\n            open: false,\n        })\n    }\n\n    return (\n        <div>\n            <Button onClick={handleClick(GrowTransition)}>\n                Grow Transition\n            </Button>\n            <Button onClick={handleClick(Fade)}>Fade Transition</Button>\n            <Button onClick={handleClick(SlideTransition)}>\n                Slide Transition\n            </Button>\n            <Snackbar\n                open={state.open}\n                onClose={handleClose}\n                TransitionComponent={state.Transition}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">I love snacks</span>}\n            />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}