{"ast":null,"code":"import _asyncToGenerator from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/metrics-api/src/app/views/metrics/CalculateMetricView.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/regenerator/index.js\";\nimport React, { Fragment, lazy, useState } from 'react';\nimport { Autocomplete, Button, Grid, Icon, TextField } from '@mui/material';\nimport { styled, useTheme } from '@mui/system';\nimport Loadable from \"../../components/Loadable/Loadable\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { DatePicker } from \"@mui/lab\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport { Span } from \"../../components/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Result = Loadable(_c2 = /*#__PURE__*/lazy(_c = function _c() {\n  return import(\"./Result\");\n}));\n_c3 = Result;\nvar MetricChart = Loadable(_c5 = /*#__PURE__*/lazy(_c4 = function _c4() {\n  return import(\"./MetricChart\");\n}));\n_c6 = MetricChart;\nvar AutoComplete = styled(Autocomplete)(function () {\n  return {\n    width: 300,\n    marginBottom: '16px'\n  };\n});\n\nvar CalculateMetricView = function CalculateMetricView() {\n  _s();\n\n  var theme = useTheme();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      status = _React$useState2[0],\n      setStatus = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      metrics = _React$useState4[0],\n      setMetrics = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      source = _React$useState6[0],\n      setSource = _React$useState6[1];\n\n  var _React$useState7 = React.useState(null),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      valueComboTime = _React$useState8[0],\n      setValueComboTime = _React$useState8[1];\n\n  var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      valueComboMetric = _React$useState10[0],\n      setValueComboMetric = _React$useState10[1];\n\n  var _useState = useState({\n    date: new Date()\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _React$useState11 = React.useState([]),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      labelsX = _React$useState12[0],\n      setLabelsX = _React$useState12[1];\n\n  var handleComboMetricChange = function handleComboMetricChange(event, newValue) {\n    if (newValue && newValue.inputValue) {\n      setValueComboMetric({\n        label: newValue.inputValue\n      });\n      return;\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, metricName, newValue.value)));\n  };\n\n  var handleComboTimeChange = function handleComboTimeChange(event, newValue) {\n    if (newValue && newValue.inputValue) {\n      setValueComboTime({\n        label: newValue.inputValue\n      });\n      return;\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, time, newValue.value)));\n  };\n\n  var handleDateChange = function handleDateChange(date) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      date: date\n    }));\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    var url = 'https://metrics-351617.rj.r.appspot.com/metrics/calc';\n    var data = {\n      dateFrom: date,\n      timeType: time,\n      metricName: metricName\n    };\n\n    var getData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var resp, dataResp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(url, {\n                  method: 'POST',\n                  body: JSON.stringify(data),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function (res) {\n                  return res.json();\n                }).catch(function (error) {\n                  return console.error('Error:', error);\n                }).then(function (response) {\n                  return console.log('Success:', response);\n                });\n\n              case 2:\n                resp = _context.sent;\n                _context.next = 5;\n                return resp.json();\n\n              case 5:\n                dataResp = _context.sent;\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    reload();\n  };\n\n  var getData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var resp, data, metricList;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (status) {\n                _context2.next = 11;\n                break;\n              }\n\n              _context2.next = 3;\n              return fetch(\"https://metrics-351617.rj.r.appspot.com/metrics/\");\n\n            case 3:\n              resp = _context2.sent;\n              _context2.next = 6;\n              return resp.json();\n\n            case 6:\n              data = _context2.sent;\n              metricList = [];\n              data.content.map(function (metric, index) {\n                return metricList.push(metric.name);\n              });\n              setMetrics(metricList);\n              setStatus(true);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var reload = function reload() {\n    return window.location.reload();\n  };\n\n  var metricName = state.metricName,\n      time = state.time,\n      date = state.date;\n  var suggestions = [{\n    label: 'MINUTE',\n    value: 'MINUTE'\n  }, {\n    label: 'HOUR minutes',\n    value: 'HOUR'\n  }, {\n    label: 'DAY',\n    value: 'DAY'\n  }, {\n    label: 'MONTH',\n    value: 'MONTH'\n  }];\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: handleSubmit,\n      onError: function onError() {\n        return null;\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 6,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 6,\n          md: 6,\n          sm: 12,\n          xs: 12,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(AutoComplete, {\n            options: suggestions,\n            getOptionLabel: function getOptionLabel(option) {\n              return option.label;\n            },\n            onChange: handleComboTimeChange,\n            renderInput: function renderInput(params) {\n              return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                label: \"Select param time\",\n                variant: \"outlined\",\n                fullWidth: true\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n            options: metrics,\n            getOptionLabel: function getOptionLabel(option) {\n              return option.label;\n            },\n            onChange: handleComboMetricChange,\n            renderInput: function renderInput(params) {\n              return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                label: \"Select metric name\",\n                variant: \"outlined\",\n                fullWidth: true\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              value: date,\n              onChange: handleDateChange,\n              renderInput: function renderInput(props) {\n                return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, props), {}, {\n                  // variant=\"Outlined\"\n                  id: \"mui-pickers-date\",\n                  label: \"Date\",\n                  sx: {\n                    mb: 2,\n                    width: '100%'\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 37\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        type: \"submit\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Span, {\n          sx: {\n            pl: 1,\n            textTransform: 'capitalize'\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(MetricChart, {\n      height: \"350px\",\n      color: [theme.palette.primary.dark, theme.palette.primary.light],\n      values: source\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CalculateMetricView, \"OMHd+HJ7h0Ng8TDWjXCVkDxMhhM=\", false, function () {\n  return [useTheme];\n});\n\n_c7 = CalculateMetricView;\nexport default CalculateMetricView;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Result$Loadable$lazy\");\n$RefreshReg$(_c2, \"Result$Loadable\");\n$RefreshReg$(_c3, \"Result\");\n$RefreshReg$(_c4, \"MetricChart$Loadable$lazy\");\n$RefreshReg$(_c5, \"MetricChart$Loadable\");\n$RefreshReg$(_c6, \"MetricChart\");\n$RefreshReg$(_c7, \"CalculateMetricView\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/metrics-api/src/app/views/metrics/CalculateMetricView.jsx"],"names":["React","Fragment","lazy","useState","Autocomplete","Button","Grid","Icon","TextField","styled","useTheme","Loadable","AdapterDateFns","DatePicker","LocalizationProvider","ValidatorForm","Span","Result","MetricChart","AutoComplete","width","marginBottom","CalculateMetricView","theme","status","setStatus","metrics","setMetrics","source","setSource","valueComboTime","setValueComboTime","valueComboMetric","setValueComboMetric","date","Date","state","setState","labelsX","setLabelsX","handleComboMetricChange","event","newValue","inputValue","label","metricName","value","handleComboTimeChange","time","handleDateChange","handleSubmit","url","data","dateFrom","timeType","getData","fetch","method","body","JSON","stringify","headers","then","res","json","catch","error","console","response","log","resp","dataResp","reload","metricList","content","map","metric","index","push","name","window","location","suggestions","mt","option","params","props","mb","pl","textTransform","palette","primary","dark","light"],"mappings":"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","sourcesContent":["import React, {Fragment, lazy, useState} from 'react'\nimport {Autocomplete, Button, Grid, Icon, TextField} from '@mui/material'\nimport {styled, useTheme} from '@mui/system'\nimport Loadable from \"../../components/Loadable/Loadable\"\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport {DatePicker} from \"@mui/lab\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport {ValidatorForm} from \"react-material-ui-form-validator\";\nimport {Span} from \"../../components/Typography\";\n\nconst Result = Loadable(lazy(() => import(\"./Result\")))\nconst MetricChart = Loadable(lazy(() => import(\"./MetricChart\")))\n\nconst AutoComplete = styled(Autocomplete)(() => ({\n    width: 300,\n    marginBottom: '16px',\n}))\n\nconst CalculateMetricView = () => {\n    const theme = useTheme()\n\n    const [status, setStatus] = React.useState(false)\n    const [metrics, setMetrics] = React.useState([]);\n    const [source, setSource] = React.useState([])\n    const [valueComboTime, setValueComboTime] = React.useState(null)\n    const [valueComboMetric, setValueComboMetric] = React.useState(null)\n    const [state, setState] = useState({\n        date: new Date(),\n    })\n\n    const [labelsX, setLabelsX] = React.useState([])\n\n    const handleComboMetricChange = (event, newValue) => {\n        if (newValue && newValue.inputValue) {\n            setValueComboMetric({\n                label: newValue.inputValue,\n            })\n            return\n        }\n        setState({\n            ...state,\n            [metricName]: newValue.value,\n        })\n    }\n\n    const handleComboTimeChange = (event, newValue) => {\n        if (newValue && newValue.inputValue) {\n            setValueComboTime({\n                label: newValue.inputValue,\n            })\n            return\n        }\n\n        setState({\n            ...state,\n            [time]: newValue.value,\n        })\n    }\n\n    const handleDateChange = (date) => {\n        setState({...state, date})\n    }\n\n    const handleSubmit = (event) => {\n\n        var url = 'https://metrics-351617.rj.r.appspot.com/metrics/calc';\n        var data = {\n            dateFrom: date,\n            timeType: time,\n            metricName: metricName\n        };\n\n        const getData = async () => {\n            const resp = await fetch(url, {\n                method: 'POST',\n                body: JSON.stringify(data),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then(res => res.json())\n                .catch(error => console.error('Error:', error))\n                .then(response => console.log('Success:', response));\n\n            const dataResp = await resp.json();\n\n        };\n\n        reload()\n    }\n\n    const getData = async () => {\n        if(!status){\n            const resp = await fetch(\"https://metrics-351617.rj.r.appspot.com/metrics/\");\n            const data = await resp.json();\n            const metricList = []\n            data.content.map((metric, index) => (\n                metricList.push(metric.name)\n            ))\n            setMetrics(metricList);\n            setStatus(true);\n        }\n    };\n\n    const reload = () => window.location.reload();\n\n    const {\n        metricName,\n        time,\n        date,\n    } = state\n\n    const suggestions = [\n        {label: 'MINUTE', value: 'MINUTE'},\n        {label: 'HOUR minutes', value: 'HOUR'},\n        {label: 'DAY', value: 'DAY'},\n        {label: 'MONTH', value: 'MONTH'},\n    ]\n\n    return (\n        <Fragment>\n            <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\n                <Grid container spacing={6}>\n                    <Grid item lg={6} md={6} sm={12} xs={12} sx={{mt: 2}}>\n                        <AutoComplete\n                            options={suggestions}\n                            getOptionLabel={(option) => option.label}\n                            onChange={handleComboTimeChange}\n                            renderInput={(params) => (\n                                <TextField\n                                    {...params}\n                                    label=\"Select param time\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                />\n                            )}\n                        />\n                        <AutoComplete\n                            options={metrics}\n                            getOptionLabel={(option) => option.label}\n                            onChange={handleComboMetricChange}\n                            renderInput={(params) => (\n                                <TextField\n                                    {...params}\n                                    label=\"Select metric name\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                />\n                            )}\n                        />\n\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <DatePicker\n                                value={date}\n                                onChange={handleDateChange}\n                                renderInput={(props) => (\n                                    <TextField\n                                        {...props}\n                                        // variant=\"Outlined\"\n                                        id=\"mui-pickers-date\"\n                                        label=\"Date\"\n                                        sx={{mb: 2, width: '100%'}}\n                                    />\n                                )}\n                            />\n                        </LocalizationProvider>\n                    </Grid>\n                </Grid>\n\n                <Button color=\"primary\" variant=\"contained\" type=\"submit\" onSubmit={handleSubmit}>\n                    <Icon>send</Icon>\n                    <Span sx={{pl: 1, textTransform: 'capitalize'}}>\n                        Send\n                    </Span>\n                </Button>\n            </ValidatorForm>\n\n            {\n                <MetricChart\n                    height=\"350px\"\n                    color={[\n                        theme.palette.primary.dark,\n                        theme.palette.primary.light,\n                    ]}\n                    values={source}\n                />\n            }\n\n        </Fragment>\n    )\n}\n\nexport default CalculateMetricView\n"]},"metadata":{},"sourceType":"module"}