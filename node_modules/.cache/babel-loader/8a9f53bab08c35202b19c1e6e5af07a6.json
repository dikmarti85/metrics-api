{"ast":null,"code":"import _objectSpread from \"/Users/dimartinez/workspace/matx-react-master/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/dimartinez/workspace/matx-react-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/dimartinez/workspace/matx-react-master/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"onClose\", \"value\", \"open\"];\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/matx-react-master/src/app/views/material-kit/dialog/ConfirmationDialog.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport Dialog from '@mui/material/Dialog';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar options = ['None', 'Atria', 'Callisto', 'Dione', 'Ganymede', 'Hangouts Call', 'Luna', 'Oberon', 'Phobos', 'Pyxis', 'Sedna', 'Titania', 'Triton', 'Umbriel'];\n\nfunction ConfirmationDialogRaw(props) {\n  _s();\n\n  var _this = this;\n\n  var onClose = props.onClose,\n      valueProp = props.value,\n      open = props.open,\n      other = _objectWithoutProperties(props, _excluded);\n\n  var _React$useState = React.useState(valueProp),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var radioGroupRef = React.useRef(null);\n  React.useEffect(function () {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  function handleEntering() {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  }\n\n  function handleCancel() {\n    onClose();\n  }\n\n  function handleOk() {\n    onClose(value);\n  }\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Dialog, _objectSpread(_objectSpread({\n    maxWidth: \"xs\",\n    disableEscapeKeyDown: true,\n    TransitionProps: {\n      onEntering: handleEntering\n    },\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    open: open\n  }, other), {}, {\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"confirmation-dialog-title\",\n      children: \"Phone Ringtone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n        ref: radioGroupRef,\n        \"aria-label\": \"Ringtone\",\n        name: \"ringtone\",\n        value: value,\n        onChange: handleChange,\n        children: options.map(function (option) {\n          return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: option,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 38\n            }, _this),\n            label: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleOk,\n        color: \"primary\",\n        children: \"Ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ConfirmationDialogRaw, \"OMt7sSt5R/TCL4tHSUZzglY9GI4=\");\n\n_c = ConfirmationDialogRaw;\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\nvar DialogRoot = styled('div')(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    '& .paper': {\n      width: '80%',\n      maxHeight: 435\n    }\n  };\n});\nexport default function ConfirmationDialog() {\n  _s2();\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open = _React$useState4[0],\n      setOpen = _React$useState4[1];\n\n  var _React$useState5 = React.useState('Dione'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      value = _React$useState6[0],\n      setValue = _React$useState6[1];\n\n  function handleClickListItem() {\n    setOpen(true);\n  }\n\n  function handleClose(newValue) {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(DialogRoot, {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      component: \"div\",\n      role: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        divider: true,\n        disabled: true,\n        role: \"listitem\",\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Interruptions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        divider: true,\n        \"aria-controls\": \"ringtone-menu\",\n        \"aria-label\": \"Phone ringtone\",\n        onClick: handleClickListItem,\n        role: \"listitem\",\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Phone ringtone\",\n          secondary: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        divider: true,\n        disabled: true,\n        role: \"listitem\",\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Default notification ringtone\",\n          secondary: \"Tethys\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationDialogRaw, {\n        keepMounted: true,\n        open: open,\n        value: value,\n        className: \"paper\",\n        id: \"ringtone-menu\",\n        onClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ConfirmationDialog, \"NJy85h6SXthY6/o2MVDs2svv5vo=\");\n\n_c2 = ConfirmationDialog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ConfirmationDialogRaw\");\n$RefreshReg$(_c2, \"ConfirmationDialog\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/matx-react-master/src/app/views/material-kit/dialog/ConfirmationDialog.jsx"],"names":["React","PropTypes","Button","List","ListItem","ListItemText","DialogTitle","DialogContent","DialogActions","Dialog","RadioGroup","Radio","FormControlLabel","styled","options","ConfirmationDialogRaw","props","onClose","valueProp","value","open","other","useState","setValue","radioGroupRef","useRef","useEffect","handleEntering","current","focus","handleCancel","handleOk","handleChange","event","newValue","onEntering","map","option","propTypes","func","isRequired","bool","string","DialogRoot","theme","width","maxWidth","backgroundColor","palette","background","paper","maxHeight","ConfirmationDialog","setOpen","handleClickListItem","handleClose"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@mui/material/Button'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemText from '@mui/material/ListItemText'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogActions from '@mui/material/DialogActions'\nimport Dialog from '@mui/material/Dialog'\nimport RadioGroup from '@mui/material/RadioGroup'\nimport Radio from '@mui/material/Radio'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport { styled } from '@mui/system'\n\nconst options = [\n    'None',\n    'Atria',\n    'Callisto',\n    'Dione',\n    'Ganymede',\n    'Hangouts Call',\n    'Luna',\n    'Oberon',\n    'Phobos',\n    'Pyxis',\n    'Sedna',\n    'Titania',\n    'Triton',\n    'Umbriel',\n]\n\nfunction ConfirmationDialogRaw(props) {\n    const { onClose, value: valueProp, open, ...other } = props\n    const [value, setValue] = React.useState(valueProp)\n    const radioGroupRef = React.useRef(null)\n\n    React.useEffect(() => {\n        if (!open) {\n            setValue(valueProp)\n        }\n    }, [valueProp, open])\n\n    function handleEntering() {\n        if (radioGroupRef.current != null) {\n            radioGroupRef.current.focus()\n        }\n    }\n\n    function handleCancel() {\n        onClose()\n    }\n\n    function handleOk() {\n        onClose(value)\n    }\n\n    function handleChange(event, newValue) {\n        setValue(newValue)\n    }\n\n    return (\n        <Dialog\n            maxWidth=\"xs\"\n            disableEscapeKeyDown\n            TransitionProps={{onEntering: handleEntering}}\n            aria-labelledby=\"confirmation-dialog-title\"\n            open={open}\n            {...other}\n        >\n            <DialogTitle id=\"confirmation-dialog-title\">\n                Phone Ringtone\n            </DialogTitle>\n            <DialogContent dividers>\n                <RadioGroup\n                    ref={radioGroupRef}\n                    aria-label=\"Ringtone\"\n                    name=\"ringtone\"\n                    value={value}\n                    onChange={handleChange}\n                >\n                    {options.map((option) => (\n                        <FormControlLabel\n                            value={option}\n                            key={option}\n                            control={<Radio />}\n                            label={option}\n                        />\n                    ))}\n                </RadioGroup>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    onClick={handleCancel}\n                >\n                    Cancel\n                </Button>\n                <Button onClick={handleOk} color=\"primary\">\n                    Ok\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nConfirmationDialogRaw.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    value: PropTypes.string.isRequired,\n}\n\nconst DialogRoot = styled('div')(({ theme }) => ({\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    '& .paper': {\n        width: '80%',\n        maxHeight: 435,\n    }\n}))\n\nexport default function ConfirmationDialog() {\n    const [open, setOpen] = React.useState(false)\n    const [value, setValue] = React.useState('Dione')\n\n    function handleClickListItem() {\n        setOpen(true)\n    }\n\n    function handleClose(newValue) {\n        setOpen(false)\n\n        if (newValue) {\n            setValue(newValue)\n        }\n    }\n\n    return (\n        <DialogRoot>\n            <List component=\"div\" role=\"list\">\n                <ListItem button divider disabled role=\"listitem\">\n                    <ListItemText primary=\"Interruptions\" />\n                </ListItem>\n                <ListItem\n                    button\n                    divider\n                    aria-controls=\"ringtone-menu\"\n                    aria-label=\"Phone ringtone\"\n                    onClick={handleClickListItem}\n                    role=\"listitem\"\n                >\n                    <ListItemText primary=\"Phone ringtone\" secondary={value} />\n                </ListItem>\n                <ListItem button divider disabled role=\"listitem\">\n                    <ListItemText\n                        primary=\"Default notification ringtone\"\n                        secondary=\"Tethys\"\n                    />\n                </ListItem>\n                <ConfirmationDialogRaw\n                    keepMounted\n                    open={open}\n                    value={value}\n                    className=\"paper\"\n                    id=\"ringtone-menu\"\n                    onClose={handleClose}\n                />\n            </List>\n        </DialogRoot>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}