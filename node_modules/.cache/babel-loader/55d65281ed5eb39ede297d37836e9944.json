{"ast":null,"code":"import _slicedToArray from \"/Users/dimartinez/workspace/matx-react-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/matx-react-master/src/app/views/material-kit/snackbar/CustomizedSnackbar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { styled } from '@mui/system';\nimport { amber, green } from '@mui/material/colors';\nimport { Alert, Button, Snackbar } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ContentRoot = styled('div')(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    '& .success': {\n      backgroundColor: green[600]\n    },\n    '& .error': {\n      backgroundColor: theme.palette.error.main\n    },\n    '& .info': {\n      backgroundColor: theme.palette.primary.main\n    },\n    '& .warning': {\n      backgroundColor: amber[700]\n    },\n    '& .icon': {\n      fontSize: 20\n    },\n    '& .iconVariant': {\n      opacity: 0.9,\n      marginRight: theme.spacing(1)\n    },\n    '& .message': {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    '& .margin': {\n      margin: theme.spacing(1)\n    }\n  };\n});\nexport default function CustomizedSnackbars() {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ContentRoot, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      className: \"margin\",\n      onClick: handleClick,\n      children: \"Open success snackbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        variant: \"filled\",\n        children: \"This is a success message!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      onClose: handleClose,\n      sx: {\n        m: 1\n      },\n      severity: \"error\",\n      variant: \"filled\",\n      children: \"This is an error message!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      onClose: handleClose,\n      sx: {\n        m: 1\n      },\n      severity: \"warning\",\n      variant: \"filled\",\n      children: \"This is a warning message!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      onClose: handleClose,\n      sx: {\n        m: 1\n      },\n      severity: \"info\",\n      variant: \"filled\",\n      children: \"This is an information message!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      onClose: handleClose,\n      sx: {\n        m: 1\n      },\n      severity: \"success\",\n      variant: \"filled\",\n      children: \"This is a success message!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomizedSnackbars, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = CustomizedSnackbars;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedSnackbars\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/matx-react-master/src/app/views/material-kit/snackbar/CustomizedSnackbar.jsx"],"names":["React","styled","amber","green","Alert","Button","Snackbar","ContentRoot","theme","backgroundColor","palette","error","main","primary","fontSize","opacity","marginRight","spacing","display","alignItems","margin","CustomizedSnackbars","useState","open","setOpen","handleClick","handleClose","event","reason","width","m"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { styled } from '@mui/system'\nimport { amber, green } from '@mui/material/colors'\nimport { Alert, Button, Snackbar } from '@mui/material'\n\nconst ContentRoot = styled('div')(({ theme }) => ({\n    '& .success': {\n        backgroundColor: green[600],\n    },\n    '& .error': {\n        backgroundColor: theme.palette.error.main,\n    },\n    '& .info': {\n        backgroundColor: theme.palette.primary.main,\n    },\n    '& .warning': {\n        backgroundColor: amber[700],\n    },\n    '& .icon': {\n        fontSize: 20,\n    },\n    '& .iconVariant': {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    '& .message': {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    '& .margin': {\n        margin: theme.spacing(1),\n    },\n}))\n\nexport default function CustomizedSnackbars() {\n    const [open, setOpen] = React.useState(false)\n\n    function handleClick() {\n        setOpen(true)\n    }\n    function handleClose(event, reason) {\n        if (reason === 'clickaway') {\n            return\n        }\n        setOpen(false)\n    }\n\n    return (\n        <ContentRoot>\n            <Button variant=\"outlined\" className=\"margin\" onClick={handleClick}>\n                Open success snackbar\n            </Button>\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                <Alert\n                    onClose={handleClose}\n                    severity=\"success\"\n                    sx={{ width: '100%' }}\n                    variant=\"filled\"\n                >\n                    This is a success message!\n                </Alert>\n            </Snackbar>\n            <Alert\n                onClose={handleClose}\n                sx={{ m: 1 }}\n                severity=\"error\"\n                variant=\"filled\"\n            >\n                This is an error message!\n            </Alert>\n            <Alert\n                onClose={handleClose}\n                sx={{ m: 1 }}\n                severity=\"warning\"\n                variant=\"filled\"\n            >\n                This is a warning message!\n            </Alert>\n            <Alert\n                onClose={handleClose}\n                sx={{ m: 1 }}\n                severity=\"info\"\n                variant=\"filled\"\n            >\n                This is an information message!\n            </Alert>\n            <Alert\n                onClose={handleClose}\n                sx={{ m: 1 }}\n                severity=\"success\"\n                variant=\"filled\"\n            >\n                This is a success message!\n            </Alert>\n        </ContentRoot>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}