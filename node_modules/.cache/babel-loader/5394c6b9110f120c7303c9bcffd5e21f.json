{"ast":null,"code":"import _slicedToArray from \"/Users/dimartinez/workspace/matx-react-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/matx-react-master/src/app/components/MatxMenu/MatxMenu.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport useSettings from 'app/hooks/useSettings';\nimport { styled, Box } from '@mui/system';\nimport { Menu, ThemeProvider } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar MenuButton = styled(Box)(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    display: 'inline-block',\n    color: theme.palette.text.primary,\n    '& div:hover': {\n      backgroundColor: theme.palette.action.hover\n    }\n  };\n});\n\nvar MatxMenu = function MatxMenu(props) {\n  _s();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var children = React.Children.toArray(props.children);\n  var _props$shouldCloseOnI = props.shouldCloseOnItemClick,\n      shouldCloseOnItemClick = _props$shouldCloseOnI === void 0 ? true : _props$shouldCloseOnI,\n      _props$horizontalPosi = props.horizontalPosition,\n      horizontalPosition = _props$horizontalPosi === void 0 ? 'left' : _props$horizontalPosi;\n\n  var _useSettings = useSettings(),\n      settings = _useSettings.settings;\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n      onClick: handleClick,\n      children: props.menuButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: settings.themes[settings.activeTheme],\n      children: /*#__PURE__*/_jsxDEV(Menu, {\n        elevation: 8,\n        getContentAnchorEl: null,\n        anchorEl: anchorEl,\n        open: !!anchorEl,\n        onClose: handleClose,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: horizontalPosition\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: horizontalPosition\n        },\n        children: children.map(function (child, index) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: shouldCloseOnItemClick ? handleClose : function () {},\n            children: child\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(MatxMenu, \"thlRW6IH1ba5aHjeieWF9bfe2fk=\", false, function () {\n  return [useSettings];\n});\n\n_c = MatxMenu;\nexport default MatxMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"MatxMenu\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/matx-react-master/src/app/components/MatxMenu/MatxMenu.jsx"],"names":["React","Fragment","useSettings","styled","Box","Menu","ThemeProvider","MenuButton","theme","display","color","palette","text","primary","backgroundColor","action","hover","MatxMenu","props","useState","anchorEl","setAnchorEl","children","Children","toArray","shouldCloseOnItemClick","horizontalPosition","settings","handleClick","event","currentTarget","handleClose","menuButton","themes","activeTheme","vertical","horizontal","map","child","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,aAA5B;AACA,SAASC,IAAT,EAAeC,aAAf,QAAoC,eAApC;;AAEA,IAAMC,UAAU,GAAGJ,MAAM,CAACC,GAAD,CAAN,CAAY;AAAA,MAAGI,KAAH,QAAGA,KAAH;AAAA,SAAgB;AAC3CC,IAAAA,OAAO,EAAE,cADkC;AAE3CC,IAAAA,KAAK,EAAEF,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmBC,OAFiB;AAG3C,mBAAe;AACXC,MAAAA,eAAe,EAAEN,KAAK,CAACG,OAAN,CAAcI,MAAd,CAAqBC;AAD3B;AAH4B,GAAhB;AAAA,CAAZ,CAAnB;;AAQA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA;;AACxB,wBAAgClB,KAAK,CAACmB,QAAN,CAAe,IAAf,CAAhC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,QAAQ,GAAGtB,KAAK,CAACuB,QAAN,CAAeC,OAAf,CAAuBN,KAAK,CAACI,QAA7B,CAAjB;AACA,8BAAqEJ,KAArE,CAAMO,sBAAN;AAAA,MAAMA,sBAAN,sCAA+B,IAA/B;AAAA,8BAAqEP,KAArE,CAAqCQ,kBAArC;AAAA,MAAqCA,kBAArC,sCAA0D,MAA1D;;AACA,qBAAqBxB,WAAW,EAAhC;AAAA,MAAQyB,QAAR,gBAAQA,QAAR;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC3BR,IAAAA,WAAW,CAACQ,KAAK,CAACC,aAAP,CAAX;AACH,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBV,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEO,WAArB;AAAA,gBACKV,KAAK,CAACc;AADX;AAAA;AAAA;AAAA;AAAA,aADJ,eAII,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEL,QAAQ,CAACM,MAAT,CAAgBN,QAAQ,CAACO,WAAzB,CAAtB;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,SAAS,EAAE,CADf;AAEI,QAAA,kBAAkB,EAAE,IAFxB;AAGI,QAAA,QAAQ,EAAEd,QAHd;AAII,QAAA,IAAI,EAAE,CAAC,CAACA,QAJZ;AAKI,QAAA,OAAO,EAAEW,WALb;AAMI,QAAA,YAAY,EAAE;AACVI,UAAAA,QAAQ,EAAE,QADA;AAEVC,UAAAA,UAAU,EAAEV;AAFF,SANlB;AAUI,QAAA,eAAe,EAAE;AACbS,UAAAA,QAAQ,EAAE,KADG;AAEbC,UAAAA,UAAU,EAAEV;AAFC,SAVrB;AAAA,kBAeKJ,QAAQ,CAACe,GAAT,CAAa,UAACC,KAAD,EAAQC,KAAR;AAAA,8BACV;AACI,YAAA,OAAO,EACHd,sBAAsB,GAAGM,WAAH,GAAiB,YAAM,CAAG,CAFxD;AAAA,sBAMKO;AANL,aAISC,KAJT;AAAA;AAAA;AAAA;AAAA,mBADU;AAAA,SAAb;AAfL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAmCH,CAjDD;;GAAMtB,Q;UAImBf,W;;;KAJnBe,Q;AAmDN,eAAeA,QAAf","sourcesContent":["import React, { Fragment } from 'react'\nimport useSettings from 'app/hooks/useSettings'\nimport { styled, Box } from '@mui/system'\nimport { Menu, ThemeProvider } from '@mui/material'\n\nconst MenuButton = styled(Box)(({ theme }) => ({\n    display: 'inline-block',\n    color: theme.palette.text.primary,\n    '& div:hover': {\n        backgroundColor: theme.palette.action.hover,\n    },\n}))\n\nconst MatxMenu = (props) => {\n    const [anchorEl, setAnchorEl] = React.useState(null)\n    const children = React.Children.toArray(props.children)\n    let { shouldCloseOnItemClick = true, horizontalPosition = 'left' } = props\n    const { settings } = useSettings()\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget)\n    }\n\n    const handleClose = () => {\n        setAnchorEl(null)\n    }\n\n    return (\n        <Fragment>\n            <MenuButton onClick={handleClick}>\n                {props.menuButton}\n            </MenuButton>\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n                <Menu\n                    elevation={8}\n                    getContentAnchorEl={null}\n                    anchorEl={anchorEl}\n                    open={!!anchorEl}\n                    onClose={handleClose}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: horizontalPosition,\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: horizontalPosition,\n                    }}\n                >\n                    {children.map((child, index) => (\n                        <div\n                            onClick={\n                                shouldCloseOnItemClick ? handleClose : () => { }\n                            }\n                            key={index}\n                        >\n                            {child}\n                        </div>\n                    ))}\n                </Menu>\n            </ThemeProvider>\n        </Fragment>\n    )\n}\n\nexport default MatxMenu\n"]},"metadata":{},"sourceType":"module"}