{"ast":null,"code":"import _objectSpread from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/metrics-api/src/app/components/MatxVerticalNav/MatxVerticalNav.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { styled, Box } from '@mui/system';\nimport React, { Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport useSettings from 'app/hooks/useSettings';\nimport { Paragraph, Span } from '../Typography';\nimport { Icon, ButtonBase } from '@mui/material';\nimport MatxVerticalNavExpansionPanel from './MatxVerticalNavExpansionPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ListLabel = styled(Paragraph)(function (_ref) {\n  var theme = _ref.theme,\n      mode = _ref.mode;\n  return {\n    fontSize: '12px',\n    marginTop: '20px',\n    marginLeft: '15px',\n    marginBottom: '10px',\n    textTransform: 'uppercase',\n    display: mode === 'compact' && 'none',\n    color: theme.palette.text.secondary\n  };\n});\nvar ExtAndIntCommon = {\n  display: 'flex',\n  overflow: 'hidden',\n  borderRadius: '4px',\n  height: 44,\n  whiteSpace: 'pre',\n  marginBottom: '8px',\n  textDecoration: 'none',\n  justifyContent: 'space-between',\n  transition: 'all 150ms ease-in',\n  '&:hover': {\n    background: 'rgba(255, 255, 255, 0.08)'\n  },\n  '&.compactNavItem': {\n    overflow: 'hidden',\n    justifyContent: 'center !important'\n  },\n  '& .icon': {\n    fontSize: '18px',\n    paddingLeft: '16px',\n    paddingRight: '16px',\n    verticalAlign: 'middle'\n  }\n};\nvar ExternalLink = styled('a')(function (_ref2) {\n  var theme = _ref2.theme;\n  return _objectSpread(_objectSpread({}, ExtAndIntCommon), {}, {\n    color: theme.palette.text.primary\n  });\n});\nvar InternalLink = styled(Box)(function (_ref3) {\n  var theme = _ref3.theme;\n  return {\n    '& a': _objectSpread(_objectSpread({}, ExtAndIntCommon), {}, {\n      color: theme.palette.text.primary\n    }),\n    '& .navItemActive': {\n      backgroundColor: 'rgba(255, 255, 255, 0.16)'\n    }\n  };\n});\nvar StyledText = styled(Span)(function (_ref4) {\n  var mode = _ref4.mode;\n  return {\n    fontSize: '0.875rem',\n    paddingLeft: '0.8rem',\n    display: mode === 'compact' && 'none'\n  };\n});\nvar BulletIcon = styled('div')(function (_ref5) {\n  var theme = _ref5.theme;\n  return {\n    padding: '2px',\n    marginLeft: '24px',\n    marginRight: '8px',\n    overflow: 'hidden',\n    borderRadius: '300px',\n    background: theme.palette.text.primary\n  };\n});\nvar BadgeValue = styled('div')(function () {\n  return {\n    padding: '1px 8px',\n    overflow: 'hidden',\n    borderRadius: '300px'\n  };\n});\n\nvar MatxVerticalNav = function MatxVerticalNav(_ref6) {\n  _s();\n\n  var items = _ref6.items;\n\n  var _useSettings = useSettings(),\n      settings = _useSettings.settings;\n\n  var mode = settings.layout1Settings.leftSidebar.mode;\n\n  var renderLevels = function renderLevels(data) {\n    return data.map(function (item, index) {\n      if (item.type === 'label') return /*#__PURE__*/_jsxDEV(ListLabel, {\n        mode: mode,\n        className: \"sidenavHoverShow\",\n        children: item.label\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, _this);\n\n      if (item.children) {\n        return /*#__PURE__*/_jsxDEV(MatxVerticalNavExpansionPanel, {\n          mode: mode,\n          item: item,\n          children: renderLevels(item.children)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, _this);\n      } else if (item.type === 'extLink') {\n        return /*#__PURE__*/_jsxDEV(ExternalLink, {\n          href: item.path,\n          className: \"\".concat(mode === 'compact' && 'compactNavItem'),\n          rel: \"noopener noreferrer\",\n          target: \"_blank\",\n          children: /*#__PURE__*/_jsxDEV(ButtonBase, {\n            name: \"child\",\n            sx: {\n              width: '100%'\n            },\n            children: [function () {\n              if (item.icon) {\n                return /*#__PURE__*/_jsxDEV(Icon, {\n                  className: \"icon\",\n                  children: item.icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 41\n                }, _this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"item-icon icon-text\",\n                  children: item.iconText\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 41\n                }, _this);\n              }\n            }(), /*#__PURE__*/_jsxDEV(StyledText, {\n              mode: mode,\n              className: \"sidenavHoverShow\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              mx: \"auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, _this), item.badge && /*#__PURE__*/_jsxDEV(BadgeValue, {\n              children: item.badge.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, _this)]\n          }, item.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, _this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, _this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(InternalLink, {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: item.path,\n            className: function className(_ref7) {\n              var isActive = _ref7.isActive;\n              return isActive ? \"navItemActive \".concat(mode === 'compact' && 'compactNavItem') : \"\".concat(mode === 'compact' && 'compactNavItem');\n            },\n            children: /*#__PURE__*/_jsxDEV(ButtonBase, {\n              name: \"child\",\n              sx: {\n                width: '100%'\n              },\n              children: [item !== null && item !== void 0 && item.icon ? /*#__PURE__*/_jsxDEV(Icon, {\n                className: \"icon\",\n                sx: {\n                  width: 36\n                },\n                children: item.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, _this) : /*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(BulletIcon, {\n                  className: \"nav-bullet\",\n                  sx: {\n                    display: mode === 'compact' && 'none'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 41\n                }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                  className: \"nav-bullet-text\",\n                  sx: {\n                    ml: '20px',\n                    fontSize: '11px',\n                    display: mode !== 'compact' && 'none'\n                  },\n                  children: item.iconText\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 41\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(StyledText, {\n                mode: mode,\n                className: \"sidenavHoverShow\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                mx: \"auto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, _this), item.badge && /*#__PURE__*/_jsxDEV(BadgeValue, {\n                className: \"sidenavHoverShow\",\n                children: item.badge.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 37\n              }, _this)]\n            }, item.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, _this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, _this);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navigation\",\n    children: renderLevels(items)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 13\n  }, _this);\n};\n\n_s(MatxVerticalNav, \"gxi4fQ+d98hNJYOxevCQ9ERfZgI=\", false, function () {\n  return [useSettings];\n});\n\n_c = MatxVerticalNav;\nexport default _c2 = /*#__PURE__*/React.memo(MatxVerticalNav);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MatxVerticalNav\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/metrics-api/src/app/components/MatxVerticalNav/MatxVerticalNav.jsx"],"names":["styled","Box","React","Fragment","NavLink","useSettings","Paragraph","Span","Icon","ButtonBase","MatxVerticalNavExpansionPanel","ListLabel","theme","mode","fontSize","marginTop","marginLeft","marginBottom","textTransform","display","color","palette","text","secondary","ExtAndIntCommon","overflow","borderRadius","height","whiteSpace","textDecoration","justifyContent","transition","background","paddingLeft","paddingRight","verticalAlign","ExternalLink","primary","InternalLink","backgroundColor","StyledText","BulletIcon","padding","marginRight","BadgeValue","MatxVerticalNav","items","settings","layout1Settings","leftSidebar","renderLevels","data","map","item","index","type","label","children","path","width","icon","iconText","name","badge","value","isActive","ml","memo"],"mappings":"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","sourcesContent":["import { styled, Box } from '@mui/system'\nimport React, { Fragment } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport useSettings from 'app/hooks/useSettings'\nimport { Paragraph, Span } from '../Typography'\nimport { Icon, ButtonBase } from '@mui/material'\nimport MatxVerticalNavExpansionPanel from './MatxVerticalNavExpansionPanel'\n\nconst ListLabel = styled(Paragraph)(({ theme, mode }) => ({\n    fontSize: '12px',\n    marginTop: '20px',\n    marginLeft: '15px',\n    marginBottom: '10px',\n    textTransform: 'uppercase',\n    display: mode === 'compact' && 'none',\n    color: theme.palette.text.secondary,\n}))\n\nconst ExtAndIntCommon = {\n    display: 'flex',\n    overflow: 'hidden',\n    borderRadius: '4px',\n    height: 44,\n    whiteSpace: 'pre',\n    marginBottom: '8px',\n    textDecoration: 'none',\n    justifyContent: 'space-between',\n    transition: 'all 150ms ease-in',\n    '&:hover': {\n        background: 'rgba(255, 255, 255, 0.08)',\n    },\n    '&.compactNavItem': {\n        overflow: 'hidden',\n        justifyContent: 'center !important',\n    },\n    '& .icon': {\n        fontSize: '18px',\n        paddingLeft: '16px',\n        paddingRight: '16px',\n        verticalAlign: 'middle',\n    },\n}\nconst ExternalLink = styled('a')(({ theme }) => ({\n    ...ExtAndIntCommon,\n    color: theme.palette.text.primary,\n}))\n\nconst InternalLink = styled(Box)(({ theme }) => ({\n    '& a': {\n        ...ExtAndIntCommon,\n        color: theme.palette.text.primary,\n    },\n    '& .navItemActive': {\n        backgroundColor: 'rgba(255, 255, 255, 0.16)',\n    },\n}))\n\nconst StyledText = styled(Span)(({ mode }) => ({\n    fontSize: '0.875rem',\n    paddingLeft: '0.8rem',\n    display: mode === 'compact' && 'none',\n}))\n\nconst BulletIcon = styled('div')(({ theme }) => ({\n    padding: '2px',\n    marginLeft: '24px',\n    marginRight: '8px',\n    overflow: 'hidden',\n    borderRadius: '300px',\n    background: theme.palette.text.primary,\n}))\n\nconst BadgeValue = styled('div')(() => ({\n    padding: '1px 8px',\n    overflow: 'hidden',\n    borderRadius: '300px',\n}))\n\nconst MatxVerticalNav = ({ items }) => {\n    const { settings } = useSettings()\n    const { mode } = settings.layout1Settings.leftSidebar\n\n    const renderLevels = (data) => {\n        return data.map((item, index) => {\n            if (item.type === 'label')\n                return (\n                    <ListLabel\n                        key={index}\n                        mode={mode}\n                        className=\"sidenavHoverShow\"\n                    >\n                        {item.label}\n                    </ListLabel>\n                )\n            if (item.children) {\n                return (\n                    <MatxVerticalNavExpansionPanel\n                        mode={mode}\n                        item={item}\n                        key={index}\n                    >\n                        {renderLevels(item.children)}\n                    </MatxVerticalNavExpansionPanel>\n                )\n            } else if (item.type === 'extLink') {\n                return (\n                    <ExternalLink\n                        key={index}\n                        href={item.path}\n                        className={`${mode === 'compact' && 'compactNavItem'}`}\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                    >\n                        <ButtonBase\n                            key={item.name}\n                            name=\"child\"\n                            sx={{ width: '100%' }}\n                        >\n                            {(() => {\n                                if (item.icon) {\n                                    return (\n                                        <Icon className=\"icon\">\n                                            {item.icon}\n                                        </Icon>\n                                    )\n                                } else {\n                                    return (\n                                        <span className=\"item-icon icon-text\">\n                                            {item.iconText}\n                                        </span>\n                                    )\n                                }\n                            })()}\n                            <StyledText\n                                mode={mode}\n                                className=\"sidenavHoverShow\"\n                            >\n                                {item.name}\n                            </StyledText>\n                            <Box mx=\"auto\"></Box>\n                            {item.badge && (\n                                <BadgeValue>{item.badge.value}</BadgeValue>\n                            )}\n                        </ButtonBase>\n                    </ExternalLink>\n                )\n            } else {\n                return (\n                    <InternalLink key={index}>\n                        <NavLink\n                            to={item.path}\n                            className={({ isActive }) =>\n                                isActive ? `navItemActive ${mode === 'compact' && 'compactNavItem'}` : `${mode === 'compact' && 'compactNavItem'}`\n                            }\n                        >\n                            <ButtonBase\n                                key={item.name}\n                                name=\"child\"\n                                sx={{ width: '100%' }}\n                            >\n                                {item?.icon ? (\n                                    <Icon className=\"icon\" sx={{ width: 36 }}>\n                                        {item.icon}\n                                    </Icon>\n                                ) : (\n                                    <Fragment>\n                                        <BulletIcon\n                                            className={`nav-bullet`}\n                                            sx={{\n                                                display:\n                                                    mode === 'compact' && 'none',\n                                            }}\n                                        />\n                                        <Box\n                                            className=\"nav-bullet-text\"\n                                            sx={{\n                                                ml: '20px',\n                                                fontSize: '11px',\n                                                display:\n                                                    mode !== 'compact' && 'none',\n                                            }}\n                                        >\n                                            {item.iconText}\n                                        </Box>\n                                    </Fragment>\n                                )}\n                                <StyledText\n                                    mode={mode}\n                                    className=\"sidenavHoverShow\"\n                                >\n                                    {item.name}\n                                </StyledText>\n                                <Box mx=\"auto\"></Box>\n                                {item.badge && (\n                                    <BadgeValue className=\"sidenavHoverShow\">\n                                        {item.badge.value}\n                                    </BadgeValue>\n                                )}\n                            </ButtonBase>\n                        </NavLink>\n                    </InternalLink>\n                )\n            }\n        })\n    }\n\n    return  <div className=\"navigation\">{renderLevels(items)}</div>\n}\n\nexport default React.memo(MatxVerticalNav)\n"]},"metadata":{},"sourceType":"module"}