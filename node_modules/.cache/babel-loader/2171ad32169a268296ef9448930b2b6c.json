{"ast":null,"code":"import _defineProperty from \"/Users/dimartinez/workspace/metrics-api-fe/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/dimartinez/workspace/metrics-api-fe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/dimartinez/workspace/metrics-api-fe/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/metrics-api-fe/src/app/views/sessions/register/JwtRegister.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport useAuth from 'app/hooks/useAuth';\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\nimport { Span } from 'app/components/Typography';\nimport { Card, Checkbox, FormControlLabel, Grid, Button } from '@mui/material';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar FlexBox = styled(Box)(function () {\n  return {\n    display: 'flex',\n    alignItems: 'center'\n  };\n});\nvar JustifyBox = styled(FlexBox)(function () {\n  return {\n    justifyContent: 'center'\n  };\n});\nvar ContentBox = styled(JustifyBox)(function () {\n  return {\n    height: '100%',\n    padding: '32px',\n    background: 'rgba(0, 0, 0, 0.01)'\n  };\n});\nvar IMG = styled('img')(function () {\n  return {\n    width: '100%'\n  };\n});\nvar JWTRegister = styled(JustifyBox)(function () {\n  return {\n    background: '#1A2038',\n    minHeight: '100vh !important',\n    '& .card': {\n      maxWidth: 800,\n      borderRadius: 12,\n      margin: '1rem'\n    }\n  };\n});\n\nvar JwtRegister = function JwtRegister() {\n  _s();\n\n  var navigate = useNavigate();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useAuth = useAuth(),\n      register = _useAuth.register;\n\n  var handleChange = function handleChange(_ref) {\n    var _ref$target = _ref.target,\n        name = _ref$target.name,\n        value = _ref$target.value;\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, name, value)));\n  };\n\n  var handleFormSubmit = function handleFormSubmit(event) {\n    try {\n      register(state.email, state.username, state.password);\n      navigate('/');\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  var username = state.username,\n      email = state.email,\n      password = state.password,\n      agreement = state.agreement;\n  return /*#__PURE__*/_jsxDEV(JWTRegister, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 5,\n          md: 5,\n          sm: 5,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(ContentBox, {\n            children: /*#__PURE__*/_jsxDEV(IMG, {\n              src: \"/assets/images/illustrations/posting_photo.svg\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 7,\n          md: 7,\n          sm: 7,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            p: 4,\n            height: \"100%\",\n            children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n              onSubmit: handleFormSubmit,\n              children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n                sx: {\n                  mb: 3,\n                  width: '100%'\n                },\n                variant: \"outlined\",\n                size: \"small\",\n                label: \"Username\",\n                onChange: handleChange,\n                type: \"text\",\n                name: \"username\",\n                value: username || '',\n                validators: ['required'],\n                errorMessages: ['this field is required']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(TextValidator, {\n                sx: {\n                  mb: 3,\n                  width: '100%'\n                },\n                variant: \"outlined\",\n                size: \"small\",\n                label: \"Email\",\n                onChange: handleChange,\n                type: \"email\",\n                name: \"email\",\n                value: email || '',\n                validators: ['required', 'isEmail'],\n                errorMessages: ['this field is required', 'email is not valid']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(TextValidator, {\n                sx: {\n                  mb: '16px',\n                  width: '100%'\n                },\n                label: \"Password\",\n                variant: \"outlined\",\n                size: \"small\",\n                onChange: handleChange,\n                name: \"password\",\n                type: \"password\",\n                value: password || '',\n                validators: ['required'],\n                errorMessages: ['this field is required']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                sx: {\n                  mb: '16px'\n                },\n                name: \"agreement\",\n                onChange: function onChange(e) {\n                  return handleChange({\n                    target: {\n                      name: 'agreement',\n                      value: e.target.checked\n                    }\n                  });\n                },\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  size: \"small\",\n                  checked: agreement || false\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 41\n                }, _this),\n                label: \"I have read and agree to the terms of service.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(FlexBox, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  color: \"primary\",\n                  variant: \"contained\",\n                  sx: {\n                    textTransform: 'capitalize'\n                  },\n                  children: \"Sign up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(Span, {\n                  sx: {\n                    mr: 1,\n                    ml: '20px'\n                  },\n                  children: \"or\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                  sx: {\n                    textTransform: 'capitalize'\n                  },\n                  onClick: function onClick() {\n                    return navigate(\"/session/signin\");\n                  },\n                  children: \"Sign in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(JwtRegister, \"+cqqNaRulprLFztUkRjPZ6NkEAQ=\", false, function () {\n  return [useNavigate, useAuth];\n});\n\n_c = JwtRegister;\nexport default JwtRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"JwtRegister\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/metrics-api-fe/src/app/views/sessions/register/JwtRegister.jsx"],"names":["useAuth","React","useState","Box","styled","useNavigate","Span","Card","Checkbox","FormControlLabel","Grid","Button","ValidatorForm","TextValidator","FlexBox","display","alignItems","JustifyBox","justifyContent","ContentBox","height","padding","background","IMG","width","JWTRegister","minHeight","maxWidth","borderRadius","margin","JwtRegister","navigate","state","setState","register","handleChange","target","name","value","handleFormSubmit","event","email","username","password","e","console","log","agreement","mb","checked","textTransform","mr","ml"],"mappings":"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","sourcesContent":["import useAuth from 'app/hooks/useAuth'\nimport React, { useState } from 'react'\nimport { Box, styled } from '@mui/system'\nimport { useNavigate } from 'react-router-dom'\nimport { Span } from 'app/components/Typography'\nimport { Card, Checkbox, FormControlLabel, Grid, Button } from '@mui/material'\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\n\nconst FlexBox = styled(Box)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n}))\n\nconst JustifyBox = styled(FlexBox)(() => ({\n    justifyContent: 'center',\n}))\n\nconst ContentBox = styled(JustifyBox)(() => ({\n    height: '100%',\n    padding: '32px',\n    background: 'rgba(0, 0, 0, 0.01)',\n}))\n\nconst IMG = styled('img')(() => ({\n    width: '100%',\n}))\n\nconst JWTRegister = styled(JustifyBox)(() => ({\n    background: '#1A2038',\n    minHeight: '100vh !important',\n    '& .card': {\n        maxWidth: 800,\n        borderRadius: 12,\n        margin: '1rem',\n    },\n}))\n\nconst JwtRegister = () => {\n    const navigate = useNavigate()\n    const [state, setState] = useState({})\n    const { register } = useAuth()\n\n    const handleChange = ({ target: { name, value } }) => {\n        setState({\n            ...state,\n            [name]: value,\n        })\n    }\n\n    const handleFormSubmit = (event) => {\n        try {\n            register(state.email, state.username, state.password)\n            navigate('/')\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    let { username, email, password, agreement } = state\n\n    return (\n        <JWTRegister>\n            <Card className=\"card\">\n                <Grid container>\n                    <Grid item lg={5} md={5} sm={5} xs={12}>\n                        <ContentBox>\n                            <IMG\n                                src=\"/assets/images/illustrations/posting_photo.svg\"\n                                alt=\"\"\n                            />\n                        </ContentBox>\n                    </Grid>\n                    <Grid item lg={7} md={7} sm={7} xs={12}>\n                        <Box p={4} height=\"100%\">\n                            <ValidatorForm onSubmit={handleFormSubmit}>\n                                <TextValidator\n                                    sx={{ mb: 3, width: '100%' }}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    label=\"Username\"\n                                    onChange={handleChange}\n                                    type=\"text\"\n                                    name=\"username\"\n                                    value={username || ''}\n                                    validators={['required']}\n                                    errorMessages={['this field is required']}\n                                />\n                                <TextValidator\n                                    sx={{ mb: 3, width: '100%' }}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    label=\"Email\"\n                                    onChange={handleChange}\n                                    type=\"email\"\n                                    name=\"email\"\n                                    value={email || ''}\n                                    validators={['required', 'isEmail']}\n                                    errorMessages={[\n                                        'this field is required',\n                                        'email is not valid',\n                                    ]}\n                                />\n                                <TextValidator\n                                    sx={{ mb: '16px', width: '100%' }}\n                                    label=\"Password\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    onChange={handleChange}\n                                    name=\"password\"\n                                    type=\"password\"\n                                    value={password || ''}\n                                    validators={['required']}\n                                    errorMessages={['this field is required']}\n                                />\n                                <FormControlLabel\n                                    sx={{ mb: '16px' }}\n                                    name=\"agreement\"\n                                    onChange={(e) =>\n                                        handleChange({\n                                            target: {\n                                                name: 'agreement',\n                                                value: e.target.checked,\n                                            },\n                                        })\n                                    }\n                                    control={\n                                        <Checkbox\n                                            size=\"small\"\n                                            checked={agreement || false}\n                                        />\n                                    }\n                                    label=\"I have read and agree to the terms of service.\"\n                                />\n                                <FlexBox>\n                                    <Button\n                                        type=\"submit\"\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        sx={{ textTransform: 'capitalize' }}\n                                    >\n                                        Sign up\n                                    </Button>\n                                    <Span sx={{ mr: 1, ml: '20px' }}>or</Span>\n                                    <Button\n                                        sx={{ textTransform: 'capitalize' }}\n                                        onClick={() => navigate(\"/session/signin\")}\n                                    >\n                                        Sign in\n                                    </Button>\n                                </FlexBox>\n                            </ValidatorForm>\n                        </Box>\n                    </Grid>\n                </Grid>\n            </Card>\n        </JWTRegister>\n    )\n}\n\nexport default JwtRegister\n"]},"metadata":{},"sourceType":"module"}