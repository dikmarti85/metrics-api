{"ast":null,"code":"import _objectSpread from \"/Users/dimartinez/workspace/matx-react-master/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/dimartinez/workspace/matx-react-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/matx-react-master/src/app/views/metrics/AutocompleteCombo.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { Fragment, lazy } from 'react';\nimport { TextField, Autocomplete } from '@mui/material';\nimport { createFilterOptions } from '@mui/material/Autocomplete';\nimport { styled, useTheme } from '@mui/system';\nimport Loadable from \"../../components/Loadable/Loadable\";\nimport ComparisonChart from \"../charts/echarts/ComparisonChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Result = Loadable(_c2 = /*#__PURE__*/lazy(_c = function _c() {\n  return import(\"./Result\");\n}));\n_c3 = Result;\nvar MetricChart = Loadable(_c5 = /*#__PURE__*/lazy(_c4 = function _c4() {\n  return import(\"./MetricChart\");\n}));\n_c6 = MetricChart;\nvar AutoComplete = styled(Autocomplete)(function () {\n  return {\n    width: 300,\n    marginBottom: '16px'\n  };\n});\nvar suggestions = [{\n  label: 'Past 5 minutes',\n  value: '0'\n}, {\n  label: 'Past 15 minutes',\n  value: '1'\n}, {\n  label: 'Past 30 minutes',\n  value: '2'\n}, {\n  label: 'Past 1 hour',\n  value: '3'\n}, {\n  label: 'Past 4 hours',\n  value: '4'\n}, {\n  label: 'Past 10 hours',\n  value: '5'\n}, {\n  label: 'Past 1 day',\n  value: '6'\n}, {\n  label: 'Past 2 days',\n  value: '7'\n}, {\n  label: 'Past 7 days',\n  value: '8'\n}];\nvar source = [['Month', 'Website', 'App'], ['Jan', 2200, 1200], ['Feb', 800, 500], ['Mar', 700, 1350], ['Apr', 1500, 1250], ['May', 2450, 450], ['June', 1700, 1250]];\nvar filter = createFilterOptions();\n\nvar AutocompleteCombo = function AutocompleteCombo() {\n  _s();\n\n  var theme = useTheme();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    isSubmitted: false\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setState = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    name: '',\n    value: ''\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      responseData = _React$useState6[0],\n      setResponseData = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      labelsX = _React$useState8[0],\n      setLabelsX = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      labelsY = _React$useState10[0],\n      setLabelsY = _React$useState10[1];\n\n  var handleChange = function handleChange(event, newValue) {\n    if (newValue && newValue.inputValue) {\n      setValue({\n        label: newValue.inputValue\n      });\n      return;\n    }\n\n    setValue(newValue);\n    var swUrl = \"https://metrics-351617.rj.r.appspot.com/metrics/\";\n    fetch(swUrl).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      console.log(response);\n      setResponseData(response);\n      setState({\n        isSubmitted: true\n      });\n    }).catch(function (error) {\n      console.log('error: ' + error);\n    });\n    calculateValuesAxisX(newValue.value);\n  };\n\n  var filterOptions = function filterOptions(options, params) {\n    var filtered = filter(options, params);\n\n    if (params.inputValue !== '') {\n      filtered.push({\n        inputValue: params.inputValue,\n        label: \"Add \\\"\".concat(params.inputValue, \"\\\"\")\n      });\n    }\n\n    return filtered;\n  };\n\n  var calculateValuesAxisX = function calculateValuesAxisX(paramTime) {\n    var current = new Date();\n    var myPastDate = new Date(current); // 5 minutes\n\n    if (paramTime == 0) {\n      myPastDate.setDate(myPastDate.getMinutes() - 5);\n      var initialDate = myPastDate;\n\n      for (var i = 0; i < 5; i++) {\n        labelsX[i] = \"\".concat(initialDate.getHours(), \":\").concat(initialDate.getMinutes());\n        initialDate.setDate(initialDate.getMinutes() + 1);\n        source[i] = labelsX[i];\n      }\n    } // 15 minutes\n\n\n    if (paramTime == 1) {\n      myPastDate.setDate(myPastDate.getMinutes() - 15);\n      var _initialDate = myPastDate;\n\n      for (var i = 0; i < 5; i++) {\n        labelsX[i] = \"\".concat(_initialDate.getHours(), \":\").concat(_initialDate.getMinutes());\n\n        _initialDate.setDate(_initialDate.getMinutes() + 3);\n      }\n    } // 30 minutes\n\n\n    if (paramTime == 2) {\n      myPastDate.setDate(myPastDate.getMinutes() - 30);\n      var _initialDate2 = myPastDate;\n\n      for (var i = 0; i < 5; i++) {\n        labelsX[i] = \"\".concat(_initialDate2.getHours(), \":\").concat(_initialDate2.getMinutes());\n\n        _initialDate2.setDate(_initialDate2.getMinutes() + 6);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AutoComplete, {\n      options: suggestions,\n      getOptionLabel: function getOptionLabel(option) {\n        return option.label;\n      },\n      onChange: handleChange,\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Combo box\",\n          variant: \"outlined\",\n          fullWidth: true\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(MetricChart, {\n      height: \"350px\",\n      color: [theme.palette.primary.dark, theme.palette.primary.light],\n      values: source\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AutocompleteCombo, \"F6X2MH0+GiuLGIbN+MABNlKQsZU=\", false, function () {\n  return [useTheme];\n});\n\n_c7 = AutocompleteCombo;\nexport default AutocompleteCombo;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Result$Loadable$lazy\");\n$RefreshReg$(_c2, \"Result$Loadable\");\n$RefreshReg$(_c3, \"Result\");\n$RefreshReg$(_c4, \"MetricChart$Loadable$lazy\");\n$RefreshReg$(_c5, \"MetricChart$Loadable\");\n$RefreshReg$(_c6, \"MetricChart\");\n$RefreshReg$(_c7, \"AutocompleteCombo\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/matx-react-master/src/app/views/metrics/AutocompleteCombo.jsx"],"names":["React","Fragment","lazy","TextField","Autocomplete","createFilterOptions","styled","useTheme","Loadable","ComparisonChart","Result","MetricChart","AutoComplete","width","marginBottom","suggestions","label","value","source","filter","AutocompleteCombo","theme","useState","setValue","isSubmitted","state","setState","name","responseData","setResponseData","labelsX","setLabelsX","labelsY","setLabelsY","handleChange","event","newValue","inputValue","swUrl","fetch","then","response","json","console","log","catch","error","calculateValuesAxisX","filterOptions","options","params","filtered","push","paramTime","current","Date","myPastDate","setDate","getMinutes","initialDate","i","getHours","option","palette","primary","dark","light"],"mappings":"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","sourcesContent":["import React, {Fragment, lazy} from 'react'\nimport { TextField, Autocomplete } from '@mui/material'\nimport { createFilterOptions } from '@mui/material/Autocomplete'\nimport {styled, useTheme} from '@mui/system'\nimport Loadable from \"../../components/Loadable/Loadable\"\nimport ComparisonChart from \"../charts/echarts/ComparisonChart\";\nconst Result = Loadable(lazy(() => import(\"./Result\")))\nconst MetricChart = Loadable(lazy(() => import(\"./MetricChart\")))\n\nconst AutoComplete = styled(Autocomplete)(() => ({\n    width: 300,\n    marginBottom: '16px',\n}))\n\nconst suggestions = [\n    { label: 'Past 5 minutes', value: '0'},\n    { label: 'Past 15 minutes', value: '1' },\n    { label: 'Past 30 minutes', value: '2' },\n    { label: 'Past 1 hour', value: '3' },\n    { label: 'Past 4 hours', value: '4' },\n    { label: 'Past 10 hours', value: '5' },\n    { label: 'Past 1 day', value: '6' },\n    { label: 'Past 2 days', value: '7' },\n    { label: 'Past 7 days', value: '8' },\n]\n\nconst source = [\n    ['Month', 'Website', 'App'],\n    ['Jan', 2200, 1200],\n    ['Feb', 800, 500],\n    ['Mar', 700, 1350],\n    ['Apr', 1500, 1250],\n    ['May', 2450, 450],\n    ['June', 1700, 1250],\n]\n\nconst filter = createFilterOptions()\n\nconst AutocompleteCombo = () => {\n    const theme = useTheme()\n    const [value, setValue] = React.useState(null)\n    const [state, setState] = React.useState({\n        isSubmitted: false,\n    })\n    const [responseData, setResponseData] = React.useState({\n        name: '',\n        value: '',\n    })\n    const [labelsX, setLabelsX] = React.useState([])\n    const [labelsY, setLabelsY] = React.useState([])\n\n    const handleChange = (event, newValue) => {\n        if (newValue && newValue.inputValue) {\n            setValue({\n                label: newValue.inputValue,\n            })\n            return\n        }\n\n        setValue(newValue)\n\n        const swUrl = `https://metrics-351617.rj.r.appspot.com/metrics/`\n        fetch(swUrl)\n            .then(response => response.json())\n            .then(response => {\n                console.log(response)\n                setResponseData(response)\n                setState({isSubmitted: true})\n            })\n            .catch((error) => {\n                console.log(\n                    'error: ' + error\n                )\n            })\n\n        calculateValuesAxisX(newValue.value)\n\n    }\n\n    const filterOptions = (options, params) => {\n        const filtered = filter(options, params)\n        if (params.inputValue !== '') {\n            filtered.push({\n                inputValue: params.inputValue,\n                label: `Add \"${params.inputValue}\"`,\n            })\n        }\n        return filtered\n    }\n\n\n    const calculateValuesAxisX = (paramTime) => {\n\n        const current = new Date();\n        const myPastDate=new Date(current);\n\n        // 5 minutes\n        if (paramTime == 0){\n            myPastDate.setDate(myPastDate.getMinutes() - 5)\n            const initialDate = myPastDate;\n\n            for (var i = 0; i < 5; i++) {\n                labelsX[i] = `${initialDate.getHours()}:${initialDate.getMinutes()}`\n                initialDate.setDate(initialDate.getMinutes() + 1)\n                source[i] = labelsX[i];\n            }\n        }\n\n        // 15 minutes\n        if (paramTime == 1){\n            myPastDate.setDate(myPastDate.getMinutes() - 15)\n            const initialDate = myPastDate;\n\n            for (var i = 0; i < 5; i++) {\n                labelsX[i] = `${initialDate.getHours()}:${initialDate.getMinutes()}`\n                initialDate.setDate(initialDate.getMinutes() + 3)\n            }\n        }\n\n        // 30 minutes\n        if (paramTime == 2){\n            myPastDate.setDate(myPastDate.getMinutes() - 30)\n            const initialDate = myPastDate;\n\n            for (var i = 0; i < 5; i++) {\n                labelsX[i] = `${initialDate.getHours()}:${initialDate.getMinutes()}`\n                initialDate.setDate(initialDate.getMinutes() + 6)\n            }\n        }\n        \n    }\n\n    return (\n        <Fragment>\n            <AutoComplete\n                options={suggestions}\n                getOptionLabel={(option) => option.label}\n                onChange={handleChange}\n                renderInput={(params) => (\n                    <TextField\n                        {...params}\n                        label=\"Combo box\"\n                        variant=\"outlined\"\n                        fullWidth\n                    />\n                )}\n            />\n\n            <MetricChart\n                height=\"350px\"\n                color={[\n                    theme.palette.primary.dark,\n                    theme.palette.primary.light,\n                ]}\n                values={source}\n            />\n\n        </Fragment>\n    )\n}\n\nexport default AutocompleteCombo\n"]},"metadata":{},"sourceType":"module"}