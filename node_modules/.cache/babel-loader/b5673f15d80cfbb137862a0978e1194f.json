{"ast":null,"code":"import _defineProperty from \"/Users/dimartinez/workspace/matx-react-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/dimartinez/workspace/matx-react-master/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/dimartinez/workspace/matx-react-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/matx-react-master/src/app/views/material-kit/checkbox/LabelledCheckbox.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { styled } from '@mui/material';\nimport { green } from '@mui/material/colors';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Favorite from '@mui/icons-material/Favorite';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar GreenCheckbox = styled(Checkbox)(function () {\n  return {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  };\n});\nexport default function LabelledCheckbox() {\n  _s();\n\n  var _React$useState = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, name, event.target.checked)));\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    row: true,\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: state.checkedA,\n        onChange: handleChange('checkedA'),\n        value: \"checkedA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this),\n      label: \"Secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: state.checkedB,\n        onChange: handleChange('checkedB'),\n        value: \"checkedB\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this),\n      label: \"Primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        value: \"checkedC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 26\n      }, this),\n      label: \"Uncontrolled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      disabled: true,\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        value: \"checkedD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 26\n      }, this),\n      label: \"Disabled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      disabled: true,\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: true,\n        value: \"checkedE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 26\n      }, this),\n      label: \"Disabled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: state.checkedF,\n        onChange: handleChange('checkedF'),\n        value: \"checkedF\",\n        indeterminate: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this),\n      label: \"Indeterminate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(GreenCheckbox, {\n        color: \"default\",\n        checked: state.checkedG,\n        onChange: handleChange('checkedG'),\n        value: \"checkedG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this),\n      label: \"Custom color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        icon: /*#__PURE__*/_jsxDEV(FavoriteBorder, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 31\n        }, this),\n        checkedIcon: /*#__PURE__*/_jsxDEV(Favorite, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 38\n        }, this),\n        value: \"checkedH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this),\n      label: \"Custom icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        icon: /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 31\n        }, this),\n        checkedIcon: /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 38\n        }, this),\n        value: \"checkedI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this),\n      label: \"Custom size\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LabelledCheckbox, \"+vNdwrLxqg5AOj/UC6xd3aTedGo=\");\n\n_c = LabelledCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"LabelledCheckbox\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/matx-react-master/src/app/views/material-kit/checkbox/LabelledCheckbox.jsx"],"names":["React","styled","green","Checkbox","FormGroup","FormControlLabel","Favorite","CheckBoxIcon","FavoriteBorder","CheckBoxOutlineBlankIcon","GreenCheckbox","color","LabelledCheckbox","useState","checkedA","checkedB","checkedF","checkedG","state","setState","handleChange","name","event","target","checked"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { styled } from '@mui/material'\nimport { green } from '@mui/material/colors'\nimport Checkbox from '@mui/material/Checkbox'\nimport FormGroup from '@mui/material/FormGroup'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Favorite from '@mui/icons-material/Favorite'\nimport CheckBoxIcon from '@mui/icons-material/CheckBox'\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder'\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank'\n\nconst GreenCheckbox = styled(Checkbox)(() => ({\n    color: green[400],\n    '&$checked': {\n        color: green[600],\n    },\n}))\n\nexport default function LabelledCheckbox() {\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedF: true,\n        checkedG: true,\n    })\n\n    const handleChange = (name) => (event) => {\n        setState({ ...state, [name]: event.target.checked })\n    }\n\n    return (\n        <FormGroup row>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={state.checkedA}\n                        onChange={handleChange('checkedA')}\n                        value=\"checkedA\"\n                    />\n                }\n                label=\"Secondary\"\n            />\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={state.checkedB}\n                        onChange={handleChange('checkedB')}\n                        value=\"checkedB\"\n                        color=\"primary\"\n                    />\n                }\n                label=\"Primary\"\n            />\n            <FormControlLabel\n                control={<Checkbox value=\"checkedC\" />}\n                label=\"Uncontrolled\"\n            />\n            <FormControlLabel\n                disabled\n                control={<Checkbox value=\"checkedD\" />}\n                label=\"Disabled\"\n            />\n            <FormControlLabel\n                disabled\n                control={<Checkbox checked value=\"checkedE\" />}\n                label=\"Disabled\"\n            />\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={state.checkedF}\n                        onChange={handleChange('checkedF')}\n                        value=\"checkedF\"\n                        indeterminate\n                    />\n                }\n                label=\"Indeterminate\"\n            />\n            <FormControlLabel\n                control={\n                    <GreenCheckbox\n                        color=\"default\"\n                        checked={state.checkedG}\n                        onChange={handleChange('checkedG')}\n                        value=\"checkedG\"\n                    />\n                }\n                label=\"Custom color\"\n            />\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        icon={<FavoriteBorder />}\n                        checkedIcon={<Favorite />}\n                        value=\"checkedH\"\n                    />\n                }\n                label=\"Custom icon\"\n            />\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                        checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                        value=\"checkedI\"\n                    />\n                }\n                label=\"Custom size\"\n            />\n        </FormGroup>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}