{"ast":null,"code":"import _slicedToArray from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/dimartinez/workspace/metrics-api/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/metrics-api/src/app/views/metrics/PaginationMetric.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { IconButton, Table, TableHead, TableBody, TableRow, TableCell, Icon, TablePagination } from '@mui/material';\nimport React from 'react';\nimport { Box, styled } from '@mui/system';\nimport { SimpleCard } from 'app/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Container = styled('div')(function (_ref) {\n  var _ref2;\n\n  var theme = _ref.theme;\n  return _ref2 = {\n    margin: '30px'\n  }, _defineProperty(_ref2, theme.breakpoints.down('sm'), {\n    margin: '16px'\n  }), _defineProperty(_ref2, '& .breadcrumb', _defineProperty({\n    marginBottom: '30px'\n  }, theme.breakpoints.down('sm'), {\n    marginBottom: '16px'\n  })), _ref2;\n});\nvar StyledTable = styled(Table)(function (_ref3) {\n  var theme = _ref3.theme;\n  return {\n    whiteSpace: 'pre',\n    '& thead': {\n      '& tr': {\n        '& th': {\n          paddingLeft: 0,\n          paddingRight: 0\n        }\n      }\n    },\n    '& tbody': {\n      '& tr': {\n        '& td': {\n          paddingLeft: 0,\n          textTransform: 'capitalize'\n        }\n      }\n    }\n  };\n});\nvar subscribarList = [{\n  name: 'john doe'\n}, {\n  name: 'kessy bryan'\n}, {\n  name: 'kessy bryan'\n}, {\n  name: 'james cassegne'\n}, {\n  name: 'lucy brown'\n}, {\n  name: 'lucy brown'\n}, {\n  name: 'lucy brown'\n}, {\n  name: 'lucy brown'\n}, {\n  name: 'lucy brown'\n}];\n\nvar PaginationMetric = function PaginationMetric() {\n  _s();\n\n  var _React$useState = React.useState(5),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      rowsPerPage = _React$useState2[0],\n      setRowsPerPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      page = _React$useState4[0],\n      setPage = _React$useState4[1];\n\n  var _React$useState5 = React.useState([{}]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      metrics = _React$useState6[0],\n      setMetrics = _React$useState6[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  var swUrl = \"https://metrics-351617.rj.r.appspot.com/metrics/\";\n  fetch(swUrl, {\n    referrerPolicy: 'same-origin'\n  }).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    console.log(response);\n    setMetrics(response);\n  }).catch(function (error) {\n    console.log('error: ' + error);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      py: \"12px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n      title: \"Metrics\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        width: \"100%\",\n        overflow: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(StyledTable, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: metrics.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (metric, index) {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: metric.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 41\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    children: /*#__PURE__*/_jsxDEV(Icon, {\n                      color: \"action\",\n                      children: \"Add Value\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 49\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 45\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 41\n                }, _this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 37\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          sx: {\n            px: 2\n          },\n          rowsPerPageOptions: [5, 10, 25],\n          component: \"div\",\n          count: metrics.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          backIconButtonProps: {\n            'aria-label': 'Previous Page'\n          },\n          nextIconButtonProps: {\n            'aria-label': 'Next Page'\n          },\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PaginationMetric, \"QyQcHTgH1bqWcnt0PZ591aNRpng=\");\n\n_c = PaginationMetric;\nexport default PaginationMetric;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationMetric\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/metrics-api/src/app/views/metrics/PaginationMetric.jsx"],"names":["IconButton","Table","TableHead","TableBody","TableRow","TableCell","Icon","TablePagination","React","Box","styled","SimpleCard","Container","theme","margin","breakpoints","down","marginBottom","StyledTable","whiteSpace","paddingLeft","paddingRight","textTransform","subscribarList","name","PaginationMetric","useState","rowsPerPage","setRowsPerPage","page","setPage","metrics","setMetrics","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","swUrl","fetch","referrerPolicy","then","response","json","console","log","catch","error","slice","map","metric","index","px","length"],"mappings":"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","sourcesContent":["import {\n    IconButton,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    Icon,\n    TablePagination,\n} from '@mui/material'\nimport React from 'react'\nimport { Box, styled } from '@mui/system'\nimport { SimpleCard } from 'app/components'\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n    '& .breadcrumb': {\n        marginBottom: '30px',\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '16px',\n        },\n    },\n}))\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n    whiteSpace: 'pre',\n    '& thead': {\n        '& tr': {\n            '& th': {\n                paddingLeft: 0,\n                paddingRight: 0,\n            },\n        },\n    },\n    '& tbody': {\n        '& tr': {\n            '& td': {\n                paddingLeft: 0,\n                textTransform: 'capitalize',\n            },\n        },\n    },\n}))\n\nconst subscribarList = [\n    {\n        name: 'john doe',\n    },\n    {\n        name: 'kessy bryan',\n    },\n    {\n        name: 'kessy bryan',\n    },\n    {\n        name: 'james cassegne',\n    },\n    {\n        name: 'lucy brown',\n    },\n    {\n        name: 'lucy brown',\n    },\n    {\n        name: 'lucy brown',\n    },\n    {\n        name: 'lucy brown',\n    },\n    {\n        name: 'lucy brown',\n    },\n]\n\nconst PaginationMetric = () => {\n    const [rowsPerPage, setRowsPerPage] = React.useState(5)\n    const [page, setPage] = React.useState(0)\n    const [metrics, setMetrics] = React.useState([{\n    }])\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value)\n        setPage(0)\n    }\n\n    const swUrl = `https://metrics-351617.rj.r.appspot.com/metrics/`\n    fetch(swUrl,{referrerPolicy: 'same-origin'})\n        .then(response => response.json())\n        .then(response => {\n            console.log(response)\n            setMetrics(response)\n        })\n        .catch((error) => {\n            console.log(\n                'error: ' + error\n            )\n        })\n\n    return (\n        <Container>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"Metrics\">\n                <Box width=\"100%\" overflow=\"auto\">\n                    <StyledTable>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Name</TableCell>\n                                <TableCell>Action</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {metrics\n                                .slice(\n                                    page * rowsPerPage,\n                                    page * rowsPerPage + rowsPerPage\n                                )\n                                .map((metric, index) => (\n                                    <TableRow key={index}>\n                                        <TableCell align=\"left\">\n                                            {metric.name}\n                                        </TableCell>\n                                        <TableCell>\n                                            <IconButton>\n                                                <Icon color=\"action\">Add Value</Icon>\n                                            </IconButton>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                        </TableBody>\n                    </StyledTable>\n\n                    <TablePagination\n                        sx={{ px: 2 }}\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={metrics.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        backIconButtonProps={{\n                            'aria-label': 'Previous Page',\n                        }}\n                        nextIconButtonProps={{\n                            'aria-label': 'Next Page',\n                        }}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                    />\n                </Box>\n            </SimpleCard>\n        </Container>\n    )\n}\n\nexport default PaginationMetric\n"]},"metadata":{},"sourceType":"module"}