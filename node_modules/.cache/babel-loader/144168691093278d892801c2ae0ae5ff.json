{"ast":null,"code":"var _jsxFileName = \"/Users/dimartinez/workspace/metrics-api/src/app/views/material-kit/snackbar/StackedSnackbar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button } from '@mui/material';\nimport { SnackbarProvider, useSnackbar } from 'notistack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StackedSnackbar() {\n  _s();\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var handleClick = function handleClick() {\n    enqueueSnackbar('I love snacks.');\n  };\n\n  var handleClickVariant = function handleClickVariant(variant) {\n    return function () {\n      // variant could be success, error, warning, info, or default\n      enqueueSnackbar('This is a warning message!', {\n        variant: variant\n      });\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      children: \"Show snackbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClickVariant('warning'),\n      children: \"Show warning snackbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StackedSnackbar, \"EOBaWbrlhJsnjjf+SgNfGhR5FU4=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = StackedSnackbar;\nexport default function IntegrationNotistack() {\n  return /*#__PURE__*/_jsxDEV(SnackbarProvider, {\n    maxSnack: 3,\n    children: /*#__PURE__*/_jsxDEV(StackedSnackbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c2 = IntegrationNotistack;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StackedSnackbar\");\n$RefreshReg$(_c2, \"IntegrationNotistack\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/metrics-api/src/app/views/material-kit/snackbar/StackedSnackbar.jsx"],"names":["React","Button","SnackbarProvider","useSnackbar","StackedSnackbar","enqueueSnackbar","handleClick","handleClickVariant","variant","IntegrationNotistack"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,WAA9C;;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AACvB,qBAA4BD,WAAW,EAAvC;AAAA,MAAQE,eAAR,gBAAQA,eAAR;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBD,IAAAA,eAAe,CAAC,gBAAD,CAAf;AACH,GAFD;;AAIA,MAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD;AAAA,WAAa,YAAM;AAC1C;AACAH,MAAAA,eAAe,CAAC,4BAAD,EAA+B;AAAEG,QAAAA,OAAO,EAAPA;AAAF,OAA/B,CAAf;AACH,KAH0B;AAAA,GAA3B;;AAKA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEF,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC,kBAAkB,CAAC,SAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GApBQH,e;UACuBD,W;;;KADvBC,e;AAsBT,eAAe,SAASK,oBAAT,GAAgC;AAC3C,sBACI,QAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAE,CAA5B;AAAA,2BACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;MANuBA,oB","sourcesContent":["import React from 'react'\nimport { Button } from '@mui/material'\nimport { SnackbarProvider, useSnackbar } from 'notistack'\n\nfunction StackedSnackbar() {\n    const { enqueueSnackbar } = useSnackbar()\n\n    const handleClick = () => {\n        enqueueSnackbar('I love snacks.')\n    }\n\n    const handleClickVariant = (variant) => () => {\n        // variant could be success, error, warning, info, or default\n        enqueueSnackbar('This is a warning message!', { variant })\n    }\n\n    return (\n        <React.Fragment>\n            <Button onClick={handleClick}>Show snackbar</Button>\n            <Button onClick={handleClickVariant('warning')}>\n                Show warning snackbar\n            </Button>\n        </React.Fragment>\n    )\n}\n\nexport default function IntegrationNotistack() {\n    return (\n        <SnackbarProvider maxSnack={3}>\n            <StackedSnackbar />\n        </SnackbarProvider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}