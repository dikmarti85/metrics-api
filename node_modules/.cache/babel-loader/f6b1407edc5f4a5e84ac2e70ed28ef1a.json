{"ast":null,"code":"import _objectSpread from \"/Users/dimartinez/workspace/metrics-api-fe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/Users/dimartinez/workspace/metrics-api-fe/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _jsxFileName = \"/Users/dimartinez/workspace/metrics-api-fe/src/app/components/Sidenav/Sidenav.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport Scrollbar from 'react-perfect-scrollbar';\nimport { navigations } from 'app/navigations';\nimport { MatxVerticalNav } from 'app/components';\nimport useSettings from 'app/hooks/useSettings';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar StyledScrollBar = styled(Scrollbar)(function () {\n  return {\n    paddingLeft: '1rem',\n    paddingRight: '1rem',\n    position: 'relative'\n  };\n});\nvar SideNavMobile = styled('div')(function (_ref) {\n  var theme = _ref.theme;\n  return _defineProperty({\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    width: '100vw',\n    background: 'rgba(0, 0, 0, 0.54)',\n    zIndex: -1\n  }, theme.breakpoints.up('lg'), {\n    display: 'none'\n  });\n});\n\nvar Sidenav = function Sidenav(_ref3) {\n  _s();\n\n  var children = _ref3.children;\n\n  var _useSettings = useSettings(),\n      settings = _useSettings.settings,\n      updateSettings = _useSettings.updateSettings;\n\n  var updateSidebarMode = function updateSidebarMode(sidebarSettings) {\n    var activeLayoutSettingsName = settings.activeLayout + 'Settings';\n    var activeLayoutSettings = settings[activeLayoutSettingsName];\n    updateSettings(_objectSpread(_objectSpread({}, settings), {}, _defineProperty({}, activeLayoutSettingsName, _objectSpread(_objectSpread({}, activeLayoutSettings), {}, {\n      leftSidebar: _objectSpread(_objectSpread({}, activeLayoutSettings.leftSidebar), sidebarSettings)\n    }))));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledScrollBar, {\n      options: {\n        suppressScrollX: true\n      },\n      children: [children, /*#__PURE__*/_jsxDEV(MatxVerticalNav, {\n        items: navigations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(SideNavMobile, {\n      onClick: function onClick() {\n        return updateSidebarMode({\n          mode: 'close'\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Sidenav, \"6ekKG4M29J9rnJUr5SmdHwM4BZw=\", false, function () {\n  return [useSettings];\n});\n\n_c = Sidenav;\nexport default Sidenav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidenav\");","map":{"version":3,"sources":["/Users/dimartinez/workspace/metrics-api-fe/src/app/components/Sidenav/Sidenav.jsx"],"names":["React","Fragment","Scrollbar","navigations","MatxVerticalNav","useSettings","styled","StyledScrollBar","paddingLeft","paddingRight","position","SideNavMobile","theme","top","left","bottom","right","width","background","zIndex","breakpoints","up","display","Sidenav","children","settings","updateSettings","updateSidebarMode","sidebarSettings","activeLayoutSettingsName","activeLayout","activeLayoutSettings","leftSidebar","suppressScrollX","mode"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,MAAT,QAAuB,aAAvB;;AAEA,IAAMC,eAAe,GAAGD,MAAM,CAACJ,SAAD,CAAN,CAAkB;AAAA,SAAO;AAC7CM,IAAAA,WAAW,EAAE,MADgC;AAE7CC,IAAAA,YAAY,EAAE,MAF+B;AAG7CC,IAAAA,QAAQ,EAAE;AAHmC,GAAP;AAAA,CAAlB,CAAxB;AAMA,IAAMC,aAAa,GAAGL,MAAM,CAAC,KAAD,CAAN,CAAc;AAAA,MAAGM,KAAH,QAAGA,KAAH;AAAA;AAChCF,IAAAA,QAAQ,EAAE,OADsB;AAEhCG,IAAAA,GAAG,EAAE,CAF2B;AAGhCC,IAAAA,IAAI,EAAE,CAH0B;AAIhCC,IAAAA,MAAM,EAAE,CAJwB;AAKhCC,IAAAA,KAAK,EAAE,CALyB;AAMhCC,IAAAA,KAAK,EAAE,OANyB;AAOhCC,IAAAA,UAAU,EAAE,qBAPoB;AAQhCC,IAAAA,MAAM,EAAE,CAAC;AARuB,KAS/BP,KAAK,CAACQ,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAT+B,EASF;AAC1BC,IAAAA,OAAO,EAAE;AADiB,GATE;AAAA,CAAd,CAAtB;;AAcA,IAAMC,OAAO,GAAG,SAAVA,OAAU,QAAkB;AAAA;;AAAA,MAAfC,QAAe,SAAfA,QAAe;;AAC9B,qBAAqCnB,WAAW,EAAhD;AAAA,MAAQoB,QAAR,gBAAQA,QAAR;AAAA,MAAkBC,cAAlB,gBAAkBA,cAAlB;;AAEA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,eAAD,EAAqB;AAC3C,QAAIC,wBAAwB,GAAGJ,QAAQ,CAACK,YAAT,GAAwB,UAAvD;AACA,QAAIC,oBAAoB,GAAGN,QAAQ,CAACI,wBAAD,CAAnC;AAEAH,IAAAA,cAAc,iCACPD,QADO,2BAETI,wBAFS,kCAGHE,oBAHG;AAINC,MAAAA,WAAW,kCACJD,oBAAoB,CAACC,WADjB,GAEJJ,eAFI;AAJL,SAAd;AAUH,GAdD;;AAgBA,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAE;AAAEK,QAAAA,eAAe,EAAE;AAAnB,OAA1B;AAAA,iBACKT,QADL,eAEI,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAErB;AAAxB;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAMI,QAAC,aAAD;AACI,MAAA,OAAO,EAAE;AAAA,eAAMwB,iBAAiB,CAAC;AAAEO,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAvB;AAAA;AADb;AAAA;AAAA;AAAA;AAAA,aANJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAYH,CA/BD;;GAAMX,O;UACmClB,W;;;KADnCkB,O;AAiCN,eAAeA,OAAf","sourcesContent":["import React, { Fragment } from 'react'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport { navigations } from 'app/navigations'\nimport { MatxVerticalNav } from 'app/components'\nimport useSettings from 'app/hooks/useSettings'\nimport { styled } from '@mui/system'\n\nconst StyledScrollBar = styled(Scrollbar)(() => ({\n    paddingLeft: '1rem',\n    paddingRight: '1rem',\n    position: 'relative',\n}))\n\nconst SideNavMobile = styled('div')(({ theme }) => ({\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    width: '100vw',\n    background: 'rgba(0, 0, 0, 0.54)',\n    zIndex: -1,\n    [theme.breakpoints.up('lg')]: {\n        display: 'none',\n    },\n}))\n\nconst Sidenav = ({ children }) => {\n    const { settings, updateSettings } = useSettings()\n\n    const updateSidebarMode = (sidebarSettings) => {\n        let activeLayoutSettingsName = settings.activeLayout + 'Settings'\n        let activeLayoutSettings = settings[activeLayoutSettingsName]\n\n        updateSettings({\n            ...settings,\n            [activeLayoutSettingsName]: {\n                ...activeLayoutSettings,\n                leftSidebar: {\n                    ...activeLayoutSettings.leftSidebar,\n                    ...sidebarSettings,\n                },\n            },\n        })\n    }\n\n    return (\n        <Fragment>\n            <StyledScrollBar options={{ suppressScrollX: true }}>\n                {children}\n                <MatxVerticalNav items={navigations} />\n            </StyledScrollBar>\n\n            <SideNavMobile\n                onClick={() => updateSidebarMode({ mode: 'close' })}\n            />\n        </Fragment>\n    )\n}\n\nexport default Sidenav\n"]},"metadata":{},"sourceType":"module"}